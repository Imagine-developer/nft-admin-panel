{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nimport Link from 'next/link';\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport { useAuth } from \"../../../util/use-auth\";\nimport CircularProgress from \"../../../app/components/CircularProgress\";\n\nconst SignIn = props => {\n  const {\n    isLoading,\n    userLogin\n  } = useAuth();\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const onFinish = values => {\n    userLogin(values);\n  };\n\n  return __jsx(\"div\", {\n    className: \"gx-app-login-wrap\"\n  }, __jsx(\"div\", {\n    className: \"gx-app-login-container\"\n  }, __jsx(\"div\", {\n    className: \"gx-app-login-main-content\"\n  }, __jsx(\"div\", {\n    className: \"gx-app-logo-content\"\n  }, __jsx(\"div\", {\n    className: \"gx-app-logo-content-bg\"\n  }, __jsx(\"img\", {\n    src: \"https://via.placeholder.com/272x395\",\n    alt: \"Neature\"\n  })), __jsx(\"div\", {\n    className: \"gx-app-logo-wid\"\n  }, __jsx(\"h1\", null, __jsx(IntlMessages, {\n    id: \"app.userAuth.signIn\"\n  })), __jsx(\"p\", null, __jsx(IntlMessages, {\n    id: \"app.userAuth.bySigning\"\n  })), __jsx(\"p\", null, __jsx(IntlMessages, {\n    id: \"app.userAuth.getAccount\"\n  }))), __jsx(\"div\", {\n    className: \"gx-app-logo\"\n  }, __jsx(\"img\", {\n    alt: \"example\",\n    src: \"/images/logo.png\"\n  }))), __jsx(\"div\", {\n    className: \"gx-app-login-content\"\n  }, __jsx(Form, {\n    initialValues: {\n      remember: true\n    },\n    name: \"basic\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    className: \"gx-signin-form gx-form-row0\"\n  }, __jsx(Form.Item, {\n    initialValue: \"demo@example.com\",\n    rules: [{\n      required: true,\n      message: 'The input is not valid E-mail!'\n    }],\n    name: \"email\"\n  }, __jsx(Input, {\n    placeholder: \"Email\"\n  })), __jsx(Form.Item, {\n    initialValue: \"demo#123\",\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }],\n    name: \"password\"\n  }, __jsx(Input, {\n    type: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(Form.Item, {\n    valuePropName: \"checked\"\n  }, __jsx(Checkbox, null, \"Remember me\"), __jsx(Link, {\n    href: \"/forgot-password\"\n  }, __jsx(\"a\", {\n    className: \"gx-login-form-forgot\"\n  }, \"Forgot password\"))), __jsx(Form.Item, null, __jsx(Button, {\n    type: \"primary\",\n    className: \"gx-mb-0\",\n    htmlType: \"submit\"\n  }, __jsx(IntlMessages, {\n    id: \"app.userAuth.signIn\"\n  })), __jsx(\"span\", null, __jsx(IntlMessages, {\n    id: \"app.userAuth.or\"\n  })), \" \", __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", null, __jsx(IntlMessages, {\n    id: \"app.userAuth.signUp\"\n  })))), __jsx(\"span\", {\n    className: \"gx-text-light gx-fs-sm\"\n  }, \" demo user email: 'demo@example.com' and password: 'demo#123'\"))), isLoading && __jsx(\"div\", {\n    className: \"gx-loader-view\"\n  }, __jsx(CircularProgress, null)))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/routes/userAuth/SignIn/index.js"],"names":["React","Button","Checkbox","Form","Input","Link","IntlMessages","useAuth","CircularProgress","SignIn","props","isLoading","userLogin","onFinishFailed","errorInfo","console","log","onFinish","values","remember","required","message"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Checkbox, Form, Input} from \"antd\";\r\nimport Link from 'next/link'\r\nimport IntlMessages from \"../../../util/IntlMessages\";\r\nimport {useAuth} from \"../../../util/use-auth\";\r\nimport CircularProgress from \"../../../app/components/CircularProgress\";\r\n\r\nconst SignIn = (props) => {\r\n  const {isLoading, userLogin} = useAuth();\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const onFinish = values => {\r\n    userLogin(values);\r\n  };\r\n\r\n  return (\r\n    <div className=\"gx-app-login-wrap\">\r\n      <div className=\"gx-app-login-container\">\r\n        <div className=\"gx-app-login-main-content\">\r\n          <div className=\"gx-app-logo-content\">\r\n            <div className=\"gx-app-logo-content-bg\">\r\n              <img src=\"https://via.placeholder.com/272x395\" alt='Neature'/>\r\n            </div>\r\n            <div className=\"gx-app-logo-wid\">\r\n              <h1><IntlMessages id=\"app.userAuth.signIn\"/></h1>\r\n              <p><IntlMessages id=\"app.userAuth.bySigning\"/></p>\r\n              <p><IntlMessages id=\"app.userAuth.getAccount\"/></p>\r\n            </div>\r\n            <div className=\"gx-app-logo\">\r\n              <img alt=\"example\" src=\"/images/logo.png\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"gx-app-login-content\">\r\n            <Form\r\n              initialValues={{remember: true}}\r\n              name=\"basic\"\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n              className=\"gx-signin-form gx-form-row0\">\r\n\r\n              <Form.Item\r\n                initialValue=\"demo@example.com\"\r\n                rules={[{required: true, message: 'The input is not valid E-mail!'}]} name=\"email\">\r\n                <Input placeholder=\"Email\"/>\r\n              </Form.Item>\r\n              <Form.Item\r\n                initialValue=\"demo#123\"\r\n                rules={[{required: true, message: 'Please input your Password!'}]} name=\"password\">\r\n                <Input type=\"password\" placeholder=\"Password\"/>\r\n              </Form.Item>\r\n              <Form.Item valuePropName=\"checked\">\r\n                <Checkbox>Remember me</Checkbox>\r\n                <Link href=\"/forgot-password\">\r\n                  <a className=\"gx-login-form-forgot\">Forgot password</a></Link>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" className=\"gx-mb-0\" htmlType=\"submit\">\r\n                  <IntlMessages id=\"app.userAuth.signIn\"/>\r\n                </Button>\r\n                <span><IntlMessages id=\"app.userAuth.or\"/></span> <Link href=\"/signup\">\r\n                <a>\r\n                  <IntlMessages id=\"app.userAuth.signUp\"/>\r\n                </a>\r\n              </Link>\r\n              </Form.Item>\r\n              <span\r\n                className=\"gx-text-light gx-fs-sm\"> demo user email: 'demo@example.com' and password: 'demo#123'</span>\r\n            </Form>\r\n          </div>\r\n          {isLoading &&\r\n          <div className=\"gx-loader-view\">\r\n            <CircularProgress/>\r\n          </div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}