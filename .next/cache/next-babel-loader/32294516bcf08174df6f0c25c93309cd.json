{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Layout, message } from \"antd\";\nimport { connect, useSelector } from \"react-redux\";\nimport Sidebar from \"../Sidebar\";\nimport { NAV_STYLE_ABOVE_HEADER, NAV_STYLE_BELOW_HEADER, NAV_STYLE_DARK_HORIZONTAL, NAV_STYLE_DEFAULT_HORIZONTAL, NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_INSIDE_HEADER_HORIZONTAL, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, THEME_TYPE_DARK } from \"../../../constants/ThemeSetting\";\nimport Customizer from \"../Customizer\";\nimport { isUnRestrictedRoute, useAuth } from \"../../../util/use-auth\";\nimport { useRouter } from \"next/router\";\nimport CircularProgress from \"../../components/CircularProgress\";\nvar Content = Layout.Content,\n    Footer = Layout.Footer;\nvar today = new Date();\n\nvar AppLayout = function AppLayout(_ref) {\n  var children = _ref.children;\n\n  var _useAuth = useAuth(),\n      authUser = _useAuth.authUser,\n      loadingAuthUser = _useAuth.loadingAuthUser,\n      error = _useAuth.error;\n\n  var _useSelector = useSelector(function (_ref2) {\n    var settings = _ref2.settings;\n    return settings;\n  }),\n      themeType = _useSelector.themeType,\n      navStyle = _useSelector.navStyle;\n\n  var router = useRouter();\n\n  var getContainerClass = function getContainerClass(navStyle) {\n    switch (navStyle) {\n      case NAV_STYLE_DARK_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_DEFAULT_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_INSIDE_HEADER_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_BELOW_HEADER:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_ABOVE_HEADER:\n        return \"gx-container-wrap\";\n\n      default:\n        return '';\n    }\n  };\n\n  useEffect(function () {\n    if (error) {\n      message.error(error.toString()).then(function (r) {\n        return r;\n      });\n    }\n  }, [error]);\n  useEffect(function () {\n    if (!loadingAuthUser) {\n      if (!authUser && !isUnRestrictedRoute(router.pathname)) {\n        router.push('/signin').then(function (r) {\n          return r;\n        });\n      } else if (authUser && isUnRestrictedRoute(router.pathname)) {\n        router.push('/').then(function (r) {\n          return r;\n        });\n      }\n    }\n  }, [authUser, loadingAuthUser, router.pathname]);\n  var bodyClass = \"\";\n\n  if (themeType === THEME_TYPE_DARK) {\n    bodyClass = \"dark-theme\";\n  }\n\n  if (loadingAuthUser) {\n    return __jsx(\"div\", {\n      className: \"gx-loader-view\"\n    }, __jsx(CircularProgress, null));\n  }\n\n  return isUnRestrictedRoute(router.pathname) ? children : __jsx(Layout, {\n    className: \"gx-app-layout \".concat(bodyClass)\n  }, __jsx(Sidebar, null), __jsx(Layout, null, __jsx(Content, {\n    className: \"gx-layout-content \".concat(getContainerClass(navStyle))\n  }, __jsx(\"div\", {\n    className: \"gx-main-content-wrapper\"\n  }, children))), __jsx(Customizer, null));\n};\n\nexport default AppLayout;","map":null,"metadata":{},"sourceType":"module"}