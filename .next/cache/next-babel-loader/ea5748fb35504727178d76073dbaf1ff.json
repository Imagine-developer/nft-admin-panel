{"ast":null,"code":"var _jsxFileName = \"/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/TokenList/TokenListItem/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Avatar, Checkbox, Dropdown, Menu } from \"antd\";\nimport AddMail from '../../addMail';\nimport axios from 'axios';\nimport TokenList from \"..\";\nimport router from \"next/router\";\nconst options = ['Delete', 'Edit', 'Pdf'];\n\nconst TokenListItem = ({\n  mail,\n  onMailSelect,\n  onMailChecked,\n  onStartSelect,\n  onDeleteMail,\n  onSaveContact\n}) => {\n  const {\n    0: contactState,\n    1: setContactState\n  } = useState(false);\n\n  async function onDeleteOneMail(data) {\n    const res = await axios.delete('https://desolate-inlet-76011.herokuapp.com/banner/' + data._id);\n    setContactState(true);\n  }\n\n  const menus = () => __jsx(Menu, {\n    onClick: e => {\n      if (e.key === 'Edit') {\n        onSaveContact(mail);\n      } else if (e.key === 'Pdf') {\n        router.push(mail.pdf);\n      } else {\n        onDeleteOneMail(mail);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 24\n    }\n  }, options.map(option => __jsx(Menu.Item, {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, option)));\n\n  console.log(mail);\n  return __jsx(\"div\", {\n    className: \"gx-module-list-item gx-mail-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-ml-2 gx-d-none gx-d-sm-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Avatar, {\n    size: \"large\",\n    src: mail.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: \"gx-mail-list-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-content\",\n    onClick: () => {\n      onMailSelect(mail);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-mail-user-des\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"gx-sender-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, mail.collect)), __jsx(\"div\", {\n    className: \"gx-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"gx-text-truncate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, \" \", mail.description)), __jsx(\"div\", {\n    className: \"gx-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, new Date(mail.creationDate).toString())), __jsx(Dropdown, {\n    overlay: menus(),\n    placement: \"bottomRight\",\n    trigger: ['click'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"gx-icon-btn icon icon-ellipse-v\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default TokenListItem;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/TokenList/TokenListItem/index.js"],"names":["React","useState","Avatar","Checkbox","Dropdown","Menu","AddMail","axios","TokenList","router","options","TokenListItem","mail","onMailSelect","onMailChecked","onStartSelect","onDeleteMail","onSaveContact","contactState","setContactState","onDeleteOneMail","data","res","delete","_id","menus","e","key","push","pdf","map","option","console","log","img","collect","description","Date","creationDate","toString"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Avatar, Checkbox, Dropdown, Menu} from \"antd\";\r\n\r\nimport AddMail from '../../addMail'\r\nimport axios from 'axios'\r\nimport TokenList from \"..\";\r\nimport router from \"next/router\";\r\n\r\n\r\nconst options = [\r\n  'Delete',\r\n  'Edit',\r\n  'Pdf'\r\n];\r\nconst TokenListItem = ({mail, onMailSelect, onMailChecked, onStartSelect, onDeleteMail, onSaveContact}) => {\r\n  const [contactState, setContactState] = useState(false)\r\n  async function onDeleteOneMail(data){\r\n    const res = await axios.delete('https://desolate-inlet-76011.herokuapp.com/banner/' + data._id)\r\n    setContactState(true)\r\n  }\r\n  const menus = () => (<Menu onClick={(e) => {\r\n    if (e.key === 'Edit') {\r\n      onSaveContact(mail)\r\n    } else if (e.key === 'Pdf'){\r\n      router.push(mail.pdf)\r\n    }\r\n    else {\r\n      onDeleteOneMail(mail)\r\n    }\r\n  }\r\n  }>\r\n    {options.map(option =>\r\n      <Menu.Item key={option}>\r\n        {option}\r\n      </Menu.Item>,\r\n    )}\r\n  </Menu>);\r\n  console.log(mail)\r\n  return (\r\n    <div className=\"gx-module-list-item gx-mail-cell\">\r\n      <div className=\"gx-module-list-icon\">\r\n        <div className=\"gx-ml-2 gx-d-none gx-d-sm-flex\">\r\n            <Avatar size=\"large\" src={mail.img}/>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"gx-mail-list-info\">\r\n\r\n        <div className=\"gx-module-list-content\" onClick={() => {\r\n          onMailSelect(mail);\r\n        }}>\r\n          <div className=\"gx-mail-user-des\">\r\n\r\n            <span className=\"gx-sender-name\">{mail.collect}</span>\r\n        </div>\r\n\r\n          <div className=\"gx-message\">\r\n   <p className=\"gx-text-truncate\"> {mail.description}</p>\r\n          </div>\r\n            <div className=\"gx-time\">{new Date(mail.creationDate).toString()}</div>\r\n\r\n\r\n\r\n        </div>\r\n{/*             <button onClick={() => {onDeleteOneMail(mail)}}>delete</button>\r\n            <button onClick={() => {onSaveContact(mail)}}>edit</button> */}\r\n        <Dropdown overlay={menus()} placement=\"bottomRight\" trigger={['click']}>\r\n              <i className=\"gx-icon-btn icon icon-ellipse-v\"/>\r\n        </Dropdown>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TokenListItem;\r\n"]},"metadata":{},"sourceType":"module"}