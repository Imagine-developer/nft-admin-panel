{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Avatar, Checkbox, Dropdown, Menu } from \"antd\";\nimport labels from \"../../../../../routes/mail/data/labels\";\nimport AddMail from '../../addMail';\nimport axios from 'axios';\nimport TokenList from \"..\";\nconst options = ['Delete', 'Edit'];\n\nconst TokenListItem = ({\n  mail,\n  onMailSelect,\n  onMailChecked,\n  onStartSelect,\n  onDeleteMail,\n  onSaveContact\n}) => {\n  const {\n    0: contactState,\n    1: setContactState\n  } = useState(false);\n\n  async function onDeleteOneMail(data) {\n    const res = await axios.delete('http://localhost:8000/banner/' + data._id);\n    setContactState(true);\n  }\n\n  const menus = () => __jsx(Menu, {\n    onClick: e => {\n      if (e.key === 'Edit') {\n        onSaveContact(mail);\n      } else {\n        onDeleteOneMail(mail);\n      }\n    }\n  }, options.map(option => __jsx(Menu.Item, {\n    key: option\n  }, option)));\n\n  console.log(mail);\n  return __jsx(\"div\", {\n    className: \"gx-module-list-item gx-mail-cell\"\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-icon\"\n  }, __jsx(\"div\", {\n    className: \"gx-ml-2 gx-d-none gx-d-sm-flex\"\n  }, __jsx(Avatar, {\n    size: \"large\",\n    src: mail.img\n  }))), __jsx(\"div\", {\n    className: \"gx-mail-list-info\"\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-content\",\n    onClick: () => {\n      onMailSelect(mail);\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-mail-user-des\"\n  }, __jsx(\"span\", {\n    className: \"gx-sender-name\"\n  }, mail.collect)), __jsx(\"div\", {\n    className: \"gx-message\"\n  }, __jsx(\"p\", {\n    className: \"gx-text-truncate\"\n  }, \" \", mail.description)), __jsx(\"div\", {\n    className: \"gx-time\"\n  }, mail.creationDate)), __jsx(Dropdown, {\n    overlay: menus(),\n    placement: \"bottomRight\",\n    trigger: ['click']\n  }, __jsx(\"i\", {\n    className: \"gx-icon-btn icon icon-ellipse-v\"\n  }))));\n};\n\nexport default TokenListItem;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/TokenList/TokenListItem/index.js"],"names":["React","useState","Avatar","Checkbox","Dropdown","Menu","labels","AddMail","axios","TokenList","options","TokenListItem","mail","onMailSelect","onMailChecked","onStartSelect","onDeleteMail","onSaveContact","contactState","setContactState","onDeleteOneMail","data","res","delete","_id","menus","e","key","map","option","console","log","img","collect","description","creationDate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,IAApC,QAA+C,MAA/C;AAEA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,IAAtB;AAGA,MAAMC,OAAO,GAAG,CACd,QADc,EAEd,MAFc,CAAhB;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,YAAP;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA,aAApC;AAAmDC,EAAAA,YAAnD;AAAiEC,EAAAA;AAAjE,CAAD,KAAqF;AACzG,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkClB,QAAQ,CAAC,KAAD,CAAhD;;AACA,iBAAemB,eAAf,CAA+BC,IAA/B,EAAoC;AAClC,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,MAAN,CAAa,kCAAkCF,IAAI,CAACG,GAApD,CAAlB;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AACD,QAAMM,KAAK,GAAG,MAAO,MAAC,IAAD;AAAM,IAAA,OAAO,EAAGC,CAAD,IAAO;AACzC,UAAIA,CAAC,CAACC,GAAF,KAAU,MAAd,EAAsB;AACpBV,QAAAA,aAAa,CAACL,IAAD,CAAb;AACD,OAFD,MAEO;AACLQ,QAAAA,eAAe,CAACR,IAAD,CAAf;AACD;AACF;AANoB,KAQlBF,OAAO,CAACkB,GAAR,CAAYC,MAAM,IACjB,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEA;AAAhB,KACGA,MADH,CADD,CARkB,CAArB;;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,GAAG,EAAEA,IAAI,CAACoB;AAA/B,IADJ,CADF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,OAAO,EAAE,MAAM;AACrDnB,MAAAA,YAAY,CAACD,IAAD,CAAZ;AACD;AAFD,KAGE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAkCA,IAAI,CAACqB,OAAvC,CAFF,CAHF,EAQE;AAAK,IAAA,SAAS,EAAC;AAAf,KACP;AAAG,IAAA,SAAS,EAAC;AAAb,UAAkCrB,IAAI,CAACsB,WAAvC,CADO,CARF,EAWI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0BtB,IAAI,CAACuB,YAA/B,CAXJ,CAFF,EAoBE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEV,KAAK,EAAxB;AAA4B,IAAA,SAAS,EAAC,aAAtC;AAAoD,IAAA,OAAO,EAAE,CAAC,OAAD;AAA7D,KACM;AAAG,IAAA,SAAS,EAAC;AAAb,IADN,CApBF,CAPF,CADF;AAmCD,CAxDD;;AA0DA,eAAed,aAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Avatar, Checkbox, Dropdown, Menu} from \"antd\";\r\n\r\nimport labels from \"../../../../../routes/mail/data/labels\";\r\nimport AddMail from '../../addMail'\r\nimport axios from 'axios'\r\nimport TokenList from \"..\";\r\n\r\n\r\nconst options = [\r\n  'Delete',\r\n  'Edit'\r\n];\r\nconst TokenListItem = ({mail, onMailSelect, onMailChecked, onStartSelect, onDeleteMail, onSaveContact}) => {\r\n  const [contactState, setContactState] = useState(false)\r\n  async function onDeleteOneMail(data){\r\n    const res = await axios.delete('http://localhost:8000/banner/' + data._id)\r\n    setContactState(true)\r\n  }\r\n  const menus = () => (<Menu onClick={(e) => {\r\n    if (e.key === 'Edit') {\r\n      onSaveContact(mail)\r\n    } else {\r\n      onDeleteOneMail(mail)\r\n    }\r\n  }\r\n  }>\r\n    {options.map(option =>\r\n      <Menu.Item key={option}>\r\n        {option}\r\n      </Menu.Item>,\r\n    )}\r\n  </Menu>);\r\n  console.log(mail)\r\n  return (\r\n    <div className=\"gx-module-list-item gx-mail-cell\">\r\n      <div className=\"gx-module-list-icon\">\r\n        <div className=\"gx-ml-2 gx-d-none gx-d-sm-flex\">\r\n            <Avatar size=\"large\" src={mail.img}/>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"gx-mail-list-info\">\r\n\r\n        <div className=\"gx-module-list-content\" onClick={() => {\r\n          onMailSelect(mail);\r\n        }}>\r\n          <div className=\"gx-mail-user-des\">\r\n\r\n            <span className=\"gx-sender-name\">{mail.collect}</span>\r\n        </div>\r\n\r\n          <div className=\"gx-message\">\r\n   <p className=\"gx-text-truncate\"> {mail.description}</p>\r\n          </div>\r\n            <div className=\"gx-time\">{mail.creationDate}</div>\r\n\r\n\r\n\r\n        </div>\r\n{/*             <button onClick={() => {onDeleteOneMail(mail)}}>delete</button>\r\n            <button onClick={() => {onSaveContact(mail)}}>edit</button> */}\r\n        <Dropdown overlay={menus()} placement=\"bottomRight\" trigger={['click']}>\r\n              <i className=\"gx-icon-btn icon icon-ellipse-v\"/>\r\n        </Dropdown>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TokenListItem;\r\n"]},"metadata":{},"sourceType":"module"}