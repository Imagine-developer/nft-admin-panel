{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Input, Modal } from \"antd\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nvar AddMail = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddMail, _React$Component);\n\n  var _super = _createSuper(AddMail);\n\n  function AddMail(props) {\n    var _this;\n\n    _classCallCheck(this, AddMail);\n\n    _this = _super.call(this, props);\n    var _props$mail = props.mail,\n        _id = _props$mail._id,\n        title = _props$mail.title,\n        subtitle = _props$mail.subtitle,\n        description = _props$mail.description;\n    _this.state = {\n      _id: _id,\n      title: title,\n      subtitle: subtitle,\n      description: description\n    };\n    return _this;\n  }\n\n  _createClass(AddMail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSaveMail = _this$props.onSaveMail,\n          onMailClose = _this$props.onMailClose,\n          open = _this$props.open,\n          currentMail = _this$props.currentMail;\n      var _this$state = this.state,\n          _id = _this$state._id,\n          name = _this$state.name,\n          email = _this$state.email,\n          wallet = _this$state.wallet;\n      return __jsx(Modal, {\n        title: contact.name === '' ? __jsx(IntlMessages, {\n          id: \"contact.addContact\"\n        }) : __jsx(IntlMessages, {\n          id: \"contact.saveContact\"\n        }),\n        toggle: onContactClose,\n        visible: open,\n        closable: false,\n        onOk: function onOk() {\n          if (name === '') return;\n          onMailClose();\n          onSaveMail({\n            '_id': contact._id,\n            'name': name,\n            'email': email,\n            'wallet': wallet\n          });\n\n          _this2.setState({\n            '_id': null,\n            'name': '',\n            'email': '',\n            'wallet': ''\n          });\n        },\n        onCancel: onContactClose\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-row\"\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-form-item\"\n      }, __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        required: true,\n        placeholder: \"Name\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        defaultValue: name,\n        margin: \"none\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"Email\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        value: email,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"Wallet\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            wallet: event.target.value\n          });\n        },\n        value: wallet,\n        margin: \"normal\"\n      })))));\n    }\n  }]);\n\n  return AddMail;\n}(React.Component);\n\nexport default AddMail;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/addMail/index.js"],"names":["React","Avatar","Input","Modal","IntlMessages","AddMail","props","mail","_id","title","subtitle","description","state","onSaveMail","onMailClose","open","currentMail","name","email","wallet","contact","onContactClose","setState","event","target","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Avatar, Input, Modal} from \"antd\";\n\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nclass AddMail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {_id, title, subtitle, description} = props.mail;\n    this.state = {\n      _id,\n      title,\n      subtitle,\n      description,\n    }\n  }\n  \n\n  render() {\n    const {onSaveMail, onMailClose, open, currentMail} = this.props;\n    const {_id, name, email, wallet} = this.state;\n    return (\n      <Modal\n        title={contact.name === '' ?\n          <IntlMessages id=\"contact.addContact\"/> :\n          <IntlMessages id=\"contact.saveContact\"/>}\n        toggle={onContactClose} visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onMailClose();\n          onSaveMail(\n            {\n              '_id': contact._id,\n              'name': name,\n              'email': email,\n              'wallet': wallet,\n            });\n          this.setState({\n            '_id': null,\n            'name': '',\n            'email': '',\n            'wallet': '',\n          })\n\n        }}\n        onCancel={onContactClose}>\n\n        <div className=\"gx-modal-box-row\">\n\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n              <Input\n                required\n                placeholder=\"Name\"\n                onChange={(event) => this.setState({name: event.target.value})}\n                defaultValue={name}\n                margin=\"none\"/>\n            </div>\n            <div className=\"gx-form-group\">\n              <Input\n                placeholder=\"Email\"\n                onChange={(event) => this.setState({email: event.target.value})}\n                value={email}\n                margin=\"normal\"/>\n            </div>\n            <div className=\"gx-form-group\">\n              <Input\n                placeholder=\"Wallet\"\n                onChange={(event) => this.setState({wallet: event.target.value})}\n                value={wallet}\n                margin=\"normal\"\n              />\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddMail;\n"]},"metadata":{},"sourceType":"module"}