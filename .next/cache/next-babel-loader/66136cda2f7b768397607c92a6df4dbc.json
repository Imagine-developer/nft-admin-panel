{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Menu } from \"antd\";\nimport Link from \"next/link\";\nimport { useRouter } from 'next/router';\nimport CustomScrollbars from \"../../../util/CustomScrollbars\";\nimport SidebarLogo from \"./SidebarLogo\";\nimport UserProfile from \"./UserProfile\";\nimport AppsNavigation from \"./AppsNavigation\";\nimport { NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, THEME_TYPE_LITE } from \"../../../constants/ThemeSetting\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPathName } from \"../../../redux/actions\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst SidebarContent = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  let {\n    navStyle,\n    themeType,\n    pathname\n  } = useSelector(({\n    settings\n  }) => settings);\n\n  const getNoHeaderClass = navStyle => {\n    if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n      return \"gx-no-header-notifications\";\n    }\n\n    return \"\";\n  };\n\n  const getNavStyleSubMenuClass = navStyle => {\n    if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n      return \"gx-no-header-submenu-popup\";\n    }\n\n    return \"\";\n  };\n\n  useEffect(() => {\n    dispatch(setPathName(router.pathname));\n  }, [router.pathname]);\n  const selectedKeys = router.pathname.substr(1) || 'sample';\n  const defaultOpenKeys = selectedKeys.split('/')[1];\n  return __jsx(React.Fragment, null, __jsx(SidebarLogo, null), __jsx(\"div\", {\n    className: \"gx-sidebar-content\"\n  }, __jsx(\"div\", {\n    className: `gx-sidebar-notifications ${getNoHeaderClass(navStyle)}`\n  }, __jsx(UserProfile, null)), __jsx(CustomScrollbars, {\n    className: \"gx-layout-sider-scrollbar\"\n  }, __jsx(Menu, {\n    defaultOpenKeys: [defaultOpenKeys],\n    selectedKeys: [selectedKeys],\n    theme: themeType === THEME_TYPE_LITE ? 'lite' : 'dark',\n    mode: \"inline\"\n  }, __jsx(Menu.Item, {\n    key: \"sample\"\n  }, __jsx(Link, {\n    href: \"/banners\"\n  }, __jsx(\"a\", null, __jsx(\"i\", {\n    className: \"icon icon-dasbhoard\"\n  }), __jsx(\"span\", null, \"banners\")))), __jsx(Menu.Item, {\n    key: \"mail\"\n  }, __jsx(Link, {\n    href: \"/mail\"\n  }, __jsx(\"a\", null, __jsx(\"i\", {\n    className: \"icon icon-dasbhoard\"\n  }), __jsx(\"span\", null, \"support\")))), __jsx(Menu.Item, {\n    key: \"users\"\n  }, __jsx(Link, {\n    href: \"/users\"\n  }, __jsx(\"a\", null, __jsx(\"i\", {\n    className: \"icon icon-dasbhoard\"\n  }), __jsx(\"span\", null, \"users\")))), __jsx(Menu.Item, {\n    key: \"nfts\"\n  }, __jsx(Link, {\n    href: \"/nfts\"\n  }, __jsx(\"a\", null, __jsx(\"i\", {\n    className: \"icon icon-dasbhoard\"\n  }), __jsx(\"span\", null, \"nfts\")))), __jsx(Menu.Item, {\n    key: \"whitelist\"\n  }, __jsx(Link, {\n    href: \"/whitelist\"\n  }, __jsx(\"a\", null, __jsx(\"i\", {\n    className: \"icon icon-dasbhoard\"\n  }), __jsx(\"span\", null, \"whitelist\")))), __jsx(Menu.Item, {\n    key: \"admins\"\n  }, __jsx(Link, {\n    href: \"/admins\"\n  }, __jsx(\"a\", null, __jsx(\"i\", {\n    className: \"icon icon-dasbhoard\"\n  }), __jsx(\"span\", null, \"admins\"))))))));\n};\n\nexport default SidebarContent;","map":null,"metadata":{},"sourceType":"module"}