{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Input, Modal } from \"antd\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nvar AddContact = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddContact, _React$Component);\n\n  var _super = _createSuper(AddContact);\n\n  function AddContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    _this = _super.call(this, props);\n    var _props$contact = props.contact,\n        id = _props$contact.id,\n        thumb = _props$contact.thumb,\n        name = _props$contact.name,\n        email = _props$contact.email,\n        wallet = _props$contact.wallet,\n        selected = _props$contact.selected,\n        starred = _props$contact.starred,\n        frequently = _props$contact.frequently;\n    _this.state = {\n      id: id,\n      thumb: thumb,\n      name: name,\n      email: email,\n      wallet: wallet,\n      selected: selected,\n      starred: starred,\n      frequently: frequently\n    };\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSaveContact = _this$props.onSaveContact,\n          onContactClose = _this$props.onContactClose,\n          open = _this$props.open,\n          contact = _this$props.contact;\n      var _this$state = this.state,\n          _id = _this$state._id,\n          name = _this$state.name,\n          email = _this$state.email,\n          wallet = _this$state.wallet;\n      return __jsx(Modal, {\n        title: contact.name === '' ? __jsx(IntlMessages, {\n          id: \"contact.addContact\"\n        }) : __jsx(IntlMessages, {\n          id: \"contact.saveContact\"\n        }),\n        toggle: onContactClose,\n        visible: open,\n        closable: false,\n        onOk: function onOk() {\n          if (name === '') return;\n          onContactClose();\n          onSaveContact({\n            '_id': contact._id,\n            'name': name,\n            'email': email,\n            'wallet': wallet\n          });\n\n          _this2.setState({\n            '_id': null,\n            'name': '',\n            'email': '',\n            'wallet': ''\n          });\n        },\n        onCancel: onContactClose\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-row\"\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-form-item\"\n      }, __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        required: true,\n        placeholder: \"Name\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        defaultValue: name,\n        margin: \"none\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"Email\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        value: email,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"Wallet\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            wallet: event.target.value\n          });\n        },\n        value: wallet,\n        margin: \"normal\"\n      })))));\n    }\n  }]);\n\n  return AddContact;\n}(React.Component);\n\nexport default AddContact;","map":null,"metadata":{},"sourceType":"module"}