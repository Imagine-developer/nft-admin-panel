{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Avatar, Checkbox, Dropdown, Menu } from \"antd\";\nimport labels from \"../../../../../routes/mail/data/labels\";\nimport AddMail from './../../addMail';\nimport axios from 'axios';\nvar options = ['Delete'];\n\nvar MailListItem = function MailListItem(_ref) {\n  _s();\n\n  var mail = _ref.mail,\n      onMailSelect = _ref.onMailSelect,\n      onMailChecked = _ref.onMailChecked,\n      onStartSelect = _ref.onStartSelect,\n      onDeleteMail = _ref.onDeleteMail;\n\n  var _useState = useState(false),\n      contactState = _useState[0],\n      setContactState = _useState[1];\n\n  function onDeleteOneMail(_x) {\n    return _onDeleteOneMail.apply(this, arguments);\n  }\n\n  function _onDeleteOneMail() {\n    _onDeleteOneMail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios[\"delete\"]('http://localhost:8000/banner/' + data._id);\n\n            case 2:\n              res = _context.sent;\n              setContactState(true);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onDeleteOneMail.apply(this, arguments);\n  }\n\n  var menus = function menus() {\n    return __jsx(Menu, {\n      onClick: function onClick(e) {\n        if (e.key === 'Edit') {\n          _this.onEditContact();\n        } else {\n          _this.onDeleteContact(_this.props.contact);\n        }\n      }\n    }, options.map(function (option) {\n      return __jsx(Menu.Item, {\n        key: option\n      }, option);\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"gx-module-list-item gx-mail-cell\"\n  }, __jsx(\"div\", {\n    className: \"gx-mail-list-info\"\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-content\",\n    onClick: function onClick() {\n      onMailSelect(mail);\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-mail-user-des\"\n  }, __jsx(\"span\", {\n    className: \"gx-sender-name\"\n  }, mail.title), __jsx(\"span\", {\n    className: \"gx-toolbar-separator\"\n  }, \"\\xA0\"), mail.url ? __jsx(\"span\", {\n    className: \"gx-d-inline-block gx-text-truncate gx-send-subject\"\n  }, mail.url) : __jsx(\"span\", {\n    className: \"gx-d-inline-block gx-text-truncate gx-send-subject\"\n  }, mail.name)), __jsx(\"div\", {\n    className: \"gx-message\"\n  }, mail.text ? __jsx(\"p\", {\n    className: \"gx-text-truncate\"\n  }, \" \", mail.text) : __jsx(\"p\", {\n    className: \"gx-text-truncate\"\n  }, \" \", mail.description)), __jsx(\"div\", {\n    className: \"gx-time\"\n  }, mail.creation_date), __jsx(\"button\", {\n    onClick: function onClick() {\n      onDeleteOneMail(mail);\n    }\n  }, \"delete\"))));\n};\n\n_s(MailListItem, \"LSVbTz1FHNZKrbjZ5mEqRq9v7h8=\");\n\n_c = MailListItem;\nexport default MailListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailListItem\");","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/MailList/MailListItem/index.js"],"names":["React","useState","Avatar","Checkbox","Dropdown","Menu","labels","AddMail","axios","options","MailListItem","mail","onMailSelect","onMailChecked","onStartSelect","onDeleteMail","contactState","setContactState","onDeleteOneMail","data","_id","res","menus","e","key","onEditContact","onDeleteContact","props","contact","map","option","title","url","name","text","description","creation_date"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Avatar, Checkbox, Dropdown, Menu} from \"antd\";\r\n\r\nimport labels from \"../../../../../routes/mail/data/labels\";\r\nimport AddMail from './../../addMail'\r\nimport axios from 'axios'\r\n\r\n\r\nconst options = [\r\n  'Delete',\r\n];\r\nconst MailListItem = ({mail, onMailSelect, onMailChecked, onStartSelect, onDeleteMail}) => {\r\n  const [contactState, setContactState] = useState(false)\r\n  async function onDeleteOneMail(data){\r\n    const res = await axios.delete('http://localhost:8000/banner/' + data._id)\r\n    setContactState(true)\r\n  }\r\n\r\n  const menus = () => (<Menu onClick={(e) => {\r\n    if (e.key === 'Edit') {\r\n      this.onEditContact()\r\n    } else {\r\n      this.onDeleteContact(this.props.contact)\r\n    }\r\n  }\r\n  }>\r\n    {options.map(option =>\r\n      <Menu.Item key={option}>\r\n        {option}\r\n      </Menu.Item>,\r\n    )}\r\n  </Menu>);\r\n  return (\r\n    <div className=\"gx-module-list-item gx-mail-cell\">\r\n\r\n      <div className=\"gx-mail-list-info\">\r\n\r\n        <div className=\"gx-module-list-content\" onClick={() => {\r\n          onMailSelect(mail);\r\n        }}>\r\n          <div className=\"gx-mail-user-des\">\r\n\r\n            <span className=\"gx-sender-name\">{mail.title}</span>\r\n\r\n            <span className=\"gx-toolbar-separator\">&nbsp;</span>\r\n\r\n            {mail.url ? <span className=\"gx-d-inline-block gx-text-truncate gx-send-subject\">{mail.url}</span>: <span className=\"gx-d-inline-block gx-text-truncate gx-send-subject\">{mail.name}</span>}\r\n        </div>\r\n\r\n          <div className=\"gx-message\">\r\n            {mail.text? <p className=\"gx-text-truncate\"> {mail.text}</p>: <p className=\"gx-text-truncate\"> {mail.description}</p>}\r\n          </div>\r\n            <div className=\"gx-time\">{mail.creation_date}</div>\r\n            <button onClick={() => {onDeleteOneMail(mail)}}>delete</button>\r\n\r\n          \r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MailListItem;\r\n"]},"metadata":{},"sourceType":"module"}