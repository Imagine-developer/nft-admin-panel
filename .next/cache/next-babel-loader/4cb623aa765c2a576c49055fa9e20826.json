{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Avatar, Dropdown, Menu } from \"antd\";\nimport CustomScrollbars from '../../../../util/CustomScrollbars';\nimport labels from \"../../../../routes/mail/data/labels\";\nconst options = ['Reply', 'Forward', 'Print'];\n\nclass MailDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showDetail: false\n    });\n\n    _defineProperty(this, \"optionMenu\", () => {\n      return __jsx(Menu, {\n        id: \"long-menu\"\n      }, options.map(option => __jsx(Menu.Item, {\n        key: option\n      }, option)));\n    });\n  }\n\n  render() {\n    const {\n      mail,\n      onStartSelect,\n      onImportantSelect\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"gx-module-detail gx-mail-detail\"\n    }, __jsx(CustomScrollbars, {\n      className: \"gx-module-content-scroll\"\n    }, __jsx(\"div\", {\n      className: \"gx-mail-detail-inner\"\n    }, __jsx(\"div\", {\n      className: \"gx-mail-header\"\n    }, __jsx(\"div\", {\n      className: \"gx-mail-header-content gx-col gx-pl-0\"\n    }, __jsx(\"div\", {\n      className: \"gx-subject\"\n    }, mail.subject)), __jsx(\"div\", {\n      className: \"gx-mail-header-actions\"\n    }, __jsx(\"div\", {\n      onClick: () => {\n        onStartSelect(mail);\n      }\n    }, mail.starred ? __jsx(\"i\", {\n      className: \"icon icon-star gx-icon-btn\"\n    }) : __jsx(\"i\", {\n      className: \"icon icon-star-o gx-icon-btn\"\n    })), __jsx(\"div\", {\n      onClick: () => {\n        onImportantSelect(mail);\n      }\n    }, mail.important ? __jsx(\"i\", {\n      className: \"icon icon-important gx-icon-btn\"\n    }) : __jsx(\"i\", {\n      className: \"icon icon-important-o gx-icon-btn\"\n    })))), __jsx(\"hr\", null), __jsx(\"div\", {\n      className: \"gx-mail-user-info gx-ml-0 gx-mb-3\"\n    }, mail.from.avatar === '' ? __jsx(Avatar, {\n      className: \"gx-avatar gx-bg-blue gx-size-40 gx-mr-3\"\n    }, \" \", mail.from.name.charAt(0).toUpperCase()) : __jsx(Avatar, {\n      className: \"gx-size-40 gx-mr-3\",\n      alt: \"Alice Freeman\",\n      src: mail.from.avatar\n    }), __jsx(\"div\", {\n      className: \"gx-sender-name\"\n    }, mail.from.name, __jsx(\"div\", {\n      className: \"gx-send-to gx-text-grey\"\n    }, \"to me\")), __jsx(Dropdown, {\n      trigger: ['click'],\n      overlay: this.optionMenu()\n    }, __jsx(\"span\", {\n      className: \"gx-ml-auto\"\n    }, __jsx(\"i\", {\n      className: \"icon icon-ellipse-v gx-icon-btn\"\n    })))), __jsx(\"div\", {\n      className: \"gx-show-link\",\n      onClick: () => {\n        this.setState({\n          showDetail: !this.state.showDetail\n        });\n      }\n    }, this.state.showDetail ? 'Hide Detail' : 'Show Detail'), this.state.showDetail && __jsx(\"div\", {\n      className: \"gx-show-detail\"\n    }, __jsx(\"div\", null, __jsx(\"strong\", null, \"From: \"), mail.from.email), __jsx(\"div\", null, __jsx(\"strong\", null, \" To: \"), mail.to.map((to, index) => __jsx(\"span\", null, index > 0 && ', ', \" \", to.email))), __jsx(\"div\", null, __jsx(\"strong\", null, \"Date: \"), mail.time, \" \")), __jsx(\"p\", null, mail.message), mail.hasAttachments && __jsx(\"div\", {\n      className: \"gx-attachment-block\"\n    }, __jsx(\"h3\", null, \"Attachments (\", mail.attachments.length, \")\"), __jsx(\"div\", {\n      className: \"gx-attachment-row\"\n    }, mail.attachments.map((attachment, index) => __jsx(\"div\", {\n      className: \"gx-attachment-col\",\n      key: index\n    }, __jsx(\"img\", {\n      src: attachment.preview,\n      alt: attachment.fileName\n    }), __jsx(\"div\", {\n      className: \"size\"\n    }, attachment.size))))))));\n  }\n\n}\n\nexport default MailDetail;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/MailDetail/index.js"],"names":["React","Avatar","Dropdown","Menu","CustomScrollbars","labels","options","MailDetail","Component","showDetail","map","option","render","mail","onStartSelect","onImportantSelect","props","subject","starred","important","from","avatar","name","charAt","toUpperCase","optionMenu","setState","state","email","to","index","time","message","hasAttachments","attachments","length","attachment","preview","fileName","size"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Dropdown, Menu} from \"antd\";\r\nimport CustomScrollbars from '../../../../util/CustomScrollbars'\r\n\r\nimport labels from \"../../../../routes/mail/data/labels\";\r\n\r\nconst options = [\r\n  'Reply',\r\n  'Forward',\r\n  'Print',\r\n];\r\n\r\nclass MailDetail extends React.Component {\r\n\r\n  state = {\r\n    showDetail: false\r\n  };\r\n\r\n  optionMenu = () => {\r\n    return (\r\n      <Menu id=\"long-menu\">\r\n        {options.map(option =>\r\n          <Menu.Item key={option}>\r\n            {option}\r\n          </Menu.Item>,\r\n        )}\r\n      </Menu>)\r\n  };\r\n\r\n  render() {\r\n    const {mail, onStartSelect, onImportantSelect} = this.props;\r\n\r\n    return (\r\n      <div className=\"gx-module-detail gx-mail-detail\">\r\n        <CustomScrollbars className=\"gx-module-content-scroll\">\r\n          <div className=\"gx-mail-detail-inner\">\r\n            <div className=\"gx-mail-header\">\r\n\r\n              <div className=\"gx-mail-header-content gx-col gx-pl-0\">\r\n                <div className=\"gx-subject\">\r\n                  {mail.subject}\r\n                </div>\r\n\r\n\r\n\r\n              </div>\r\n\r\n              <div className=\"gx-mail-header-actions\">\r\n\r\n                <div onClick={() => {\r\n                  onStartSelect(mail);\r\n                }}>\r\n                  {mail.starred ?\r\n                    <i className=\"icon icon-star gx-icon-btn\"/> :\r\n                    <i className=\"icon icon-star-o gx-icon-btn\"/>\r\n                  }\r\n\r\n                </div>\r\n                <div onClick={() => {\r\n                  onImportantSelect(mail);\r\n                }}>\r\n\r\n                  {mail.important ?\r\n                    <i className=\"icon icon-important gx-icon-btn\"/>\r\n                    : <i className=\"icon icon-important-o gx-icon-btn\"/>\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className=\"gx-mail-user-info gx-ml-0 gx-mb-3\">\r\n\r\n              {mail.from.avatar === '' ?\r\n                <Avatar\r\n                  className=\"gx-avatar gx-bg-blue gx-size-40 gx-mr-3\"> {mail.from.name.charAt(0).toUpperCase()}</Avatar> :\r\n                <Avatar className=\"gx-size-40 gx-mr-3\" alt=\"Alice Freeman\"\r\n                        src={mail.from.avatar}/>\r\n              }\r\n\r\n              <div className=\"gx-sender-name\">{mail.from.name}\r\n                <div className=\"gx-send-to gx-text-grey\">to me</div>\r\n              </div>\r\n\r\n              <Dropdown trigger={['click']} overlay={this.optionMenu()}>\r\n                <span className=\"gx-ml-auto\"><i className=\"icon icon-ellipse-v gx-icon-btn\"/></span>\r\n              </Dropdown>\r\n\r\n            </div>\r\n\r\n            <div className=\"gx-show-link\" onClick={() => {\r\n              this.setState({showDetail: !this.state.showDetail});\r\n            }}>{this.state.showDetail ? 'Hide Detail' : 'Show Detail'}</div>\r\n            {this.state.showDetail && (<div className=\"gx-show-detail\">\r\n              <div>\r\n                <strong>From: </strong>{mail.from.email}\r\n              </div>\r\n              <div>\r\n                <strong> To: </strong>\r\n                {\r\n                  mail.to.map((to, index) => <span>{index > 0 && ', '} {to.email}</span>)\r\n                }\r\n              </div>\r\n              <div><strong>Date: </strong>{mail.time} </div>\r\n            </div>)}\r\n\r\n\r\n            <p>\r\n              {mail.message}\r\n            </p>\r\n\r\n            {mail.hasAttachments &&\r\n            <div className=\"gx-attachment-block\">\r\n              <h3>Attachments ({mail.attachments.length})</h3>\r\n              <div className=\"gx-attachment-row\">\r\n                {mail.attachments.map((attachment, index) =>\r\n                  <div className=\"gx-attachment-col\" key={index}>\r\n                    <img src={attachment.preview} alt={attachment.fileName}/>\r\n                    <div className=\"size\">{attachment.size}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            }\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MailDetail;\r\n"]},"metadata":{},"sourceType":"module"}