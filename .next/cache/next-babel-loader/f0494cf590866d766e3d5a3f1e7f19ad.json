{"ast":null,"code":"import Web3 from \"web3\";\n\nconst connectMetaMask = async () => {\n  let userAddress, web3;\n\n  if (window.ethereum) {\n    web3 = await new Web3(window.ethereum);\n    console.log(\"connect MetaMask\");\n\n    try {\n      await window.ethereum.enable().then(async function () {\n        // User has allowed account access to DApp...\n        console.log(\"step2\");\n\n        if (web3) {\n          if (window.ethereum.selectedAddress !== undefined) {\n            userAddress = window.ethereum.selectedAddress;\n          } else if (web3.givenProvider.MetamaskInpageProvider !== undefined) {\n            userAddress = web3.givenProvider.MetamaskInpageProvider;\n          } else if (web3.givenProvider.selectedAddress !== undefined) {\n            userAddress = web3.givenProvider.selectedAddress;\n          }\n        }\n      });\n      console.log(\"userAddress: \", userAddress);\n      return {\n        userAddress,\n        web3\n      };\n    } catch (e) {\n      // User has denied account access to DApp...\n      console.log(e);\n    }\n  } // Legacy DApp Browsers\n  else if (window.web3) {\n    web3 = await new Web3(web3.currentProvider);\n    console.log(web3);\n    console.log(\"connect MetaMask\");\n\n    if (web3) {\n      if (window.ethereum.selectedAddress !== undefined) {\n        userAddress = window.ethereum.selectedAddress;\n      } else if (web3.givenProvider.MetamaskInpageProvider !== undefined) {\n        userAddress = web3.givenProvider.MetamaskInpageProvider;\n      } else if (web3.givenProvider.selectedAddress !== undefined) {\n        userAddress = web3.givenProvider.selectedAddress;\n      }\n\n      console.log(\"userAddress: \", userAddress);\n    }\n\n    return {\n      userAddress,\n      web3\n    };\n  } // Non-DApp Browsers\n  else {\n    console.log(\"You have to install MetaMask !\");\n  }\n};\n\nexport default connectMetaMask;","map":null,"metadata":{},"sourceType":"module"}