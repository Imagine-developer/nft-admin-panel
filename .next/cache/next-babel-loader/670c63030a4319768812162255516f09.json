{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Checkbox, Dropdown, Menu } from \"antd\";\nimport AddContact from \"../../AddContact/index\";\nimport AddToken from '../../AddToken';\nvar options = ['Edit', 'Delete'];\n\nvar ContactCell = /*#__PURE__*/function (_React$Component) {\n  _inherits(ContactCell, _React$Component);\n\n  var _super = _createSuper(ContactCell);\n\n  function ContactCell() {\n    var _this;\n\n    _classCallCheck(this, ContactCell);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"onContactClose\", function () {\n      _this.setState({\n        addContactState: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteContact\", function (contact) {\n      _this.setState({\n        addContactState: false\n      });\n\n      _this.props.onDeleteContact(contact);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEditContact\", function () {\n      _this.setState({\n        addContactState: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"menus\", function () {\n      return __jsx(Menu, {\n        onClick: function onClick(e) {\n          if (e.key === 'Edit') {\n            _this.onEditContact();\n          } else {\n            _this.onDeleteContact(_this.props.contact);\n          }\n        }\n      }, options.map(function (option) {\n        return __jsx(Menu.Item, {\n          key: option\n        }, option);\n      }));\n    });\n\n    _this.state = {\n      addContactState: false\n    };\n    return _this;\n  }\n\n  _createClass(ContactCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contact = _this$props.contact,\n          onContactSelect = _this$props.onContactSelect,\n          onSaveContact = _this$props.onSaveContact;\n      var addContactState = this.state.addContactState;\n      return __jsx(\"div\", {\n        className: \"gx-contact-item\"\n      }, contact.description ? __jsx(\"div\", {\n        className: \"gx-module-list-icon\"\n      }, __jsx(\"div\", {\n        className: \"gx-ml-2 gx-d-none gx-d-sm-flex\"\n      }, __jsx(Avatar, {\n        size: \"large\",\n        src: contact.img\n      }))) : null, __jsx(\"div\", {\n        className: \"gx-module-list-info gx-contact-list-info\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-contact-content\"\n      }, __jsx(\"p\", {\n        className: \"gx-mb-1\"\n      }, contact.description ? __jsx(\"span\", {\n        className: \"gx-text-truncate gx-contact-name\"\n      }, \" \", contact.collect, \" \") : __jsx(\"span\", {\n        className: \"gx-text-truncate gx-contact-name\"\n      }, \" \", contact.name, \" \")), __jsx(\"div\", {\n        className: \"gx-text-muted\"\n      }, contact.description ? __jsx(\"span\", {\n        className: \"gx-email gx-d-inline-block gx-mr-2\"\n      }, contact.description, \",\") : __jsx(\"span\", {\n        className: \"gx-email gx-d-inline-block gx-mr-2\"\n      }, contact.email, \",\"), contact.description ? __jsx(\"span\", {\n        className: \"gx-phone gx-d-inline-block\"\n      }) : __jsx(\"span\", {\n        className: \"gx-phone gx-d-inline-block\"\n      }, contact.wallet))), __jsx(\"div\", {\n        className: \"gx-module-contact-right\"\n      }, __jsx(Dropdown, {\n        overlay: this.menus(),\n        placement: \"bottomRight\",\n        trigger: ['click']\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-ellipse-v\"\n      })), addContactState && [contact.description ? __jsx(AddToken, {\n        open: addContactState,\n        contact: contact,\n        onSaveContact: onSaveContact,\n        onContactClose: this.onContactClose,\n        onDeleteContact: this.onDeleteContact\n      }) : __jsx(AddContact, {\n        open: addContactState,\n        contact: contact,\n        onSaveContact: onSaveContact,\n        onContactClose: this.onContactClose,\n        onDeleteContact: this.onDeleteContact\n      })])));\n    }\n  }]);\n\n  return ContactCell;\n}(React.Component);\n\nexport default ContactCell;","map":null,"metadata":{},"sourceType":"module"}