{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Layout, message } from \"antd\";\nimport { connect, useSelector } from \"react-redux\";\nimport Sidebar from \"../Sidebar\";\nimport { NAV_STYLE_ABOVE_HEADER, NAV_STYLE_BELOW_HEADER, NAV_STYLE_DARK_HORIZONTAL, NAV_STYLE_DEFAULT_HORIZONTAL, NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_INSIDE_HEADER_HORIZONTAL, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, THEME_TYPE_DARK } from \"../../../constants/ThemeSetting\";\nimport Customizer from \"../Customizer\";\nimport { isUnRestrictedRoute, useAuth } from \"../../../util/use-auth\";\nimport { useRouter } from \"next/router\";\nimport CircularProgress from \"../../components/CircularProgress\";\nconst {\n  Content,\n  Footer\n} = Layout;\nconst today = new Date();\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    authUser,\n    loadingAuthUser,\n    error\n  } = useAuth();\n  const {\n    themeType,\n    navStyle\n  } = useSelector(({\n    settings\n  }) => settings);\n  const router = useRouter();\n\n  const getContainerClass = navStyle => {\n    switch (navStyle) {\n      case NAV_STYLE_DARK_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_DEFAULT_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_INSIDE_HEADER_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_BELOW_HEADER:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_ABOVE_HEADER:\n        return \"gx-container-wrap\";\n\n      default:\n        return '';\n    }\n  };\n\n  useEffect(() => {\n    if (error) {\n      message.error(error.toString()).then(r => r);\n    }\n  }, [error]);\n  useEffect(() => {\n    if (!loadingAuthUser) {\n      if (!authUser && !isUnRestrictedRoute(router.pathname)) {\n        router.push('/signin').then(r => r);\n      } else if (authUser && isUnRestrictedRoute(router.pathname)) {\n        router.push('/').then(r => r);\n      }\n    }\n  }, [authUser, loadingAuthUser, router.pathname]);\n  let bodyClass = \"\";\n\n  if (themeType === THEME_TYPE_DARK) {\n    bodyClass = \"dark-theme\";\n  }\n\n  if (loadingAuthUser) {\n    return __jsx(\"div\", {\n      className: \"gx-loader-view\"\n    }, __jsx(CircularProgress, null));\n  }\n\n  return isUnRestrictedRoute(router.pathname) ? children : __jsx(Layout, {\n    className: `gx-app-layout ${bodyClass}`\n  }, __jsx(Sidebar, null), __jsx(Layout, null, __jsx(Content, {\n    className: `gx-layout-content ${getContainerClass(navStyle)}`\n  }, __jsx(\"div\", {\n    className: \"gx-main-content-wrapper\"\n  }, children))), __jsx(Customizer, null));\n};\n\nexport default AppLayout;","map":null,"metadata":{},"sourceType":"module"}