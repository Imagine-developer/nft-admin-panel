{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Avatar, Input, Modal } from \"antd\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nclass AddContact extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      id,\n      thumb,\n      name,\n      email,\n      wallet,\n      designation,\n      selected,\n      starred,\n      frequently\n    } = props.contact;\n    this.state = {\n      id,\n      thumb,\n      name,\n      email,\n      wallet,\n      designation,\n      selected,\n      starred,\n      frequently\n    };\n  }\n\n  render() {\n    const {\n      onSaveContact,\n      onContactClose,\n      open,\n      contact\n    } = this.props;\n    const {\n      id,\n      name,\n      email,\n      wallet,\n      designation,\n      selected,\n      starred,\n      frequently\n    } = this.state;\n    return __jsx(Modal, {\n      title: contact.name === '' ? __jsx(IntlMessages, {\n        id: \"contact.addContact\"\n      }) : __jsx(IntlMessages, {\n        id: \"contact.saveContact\"\n      }),\n      toggle: onContactClose,\n      visible: open,\n      closable: false,\n      onOk: () => {\n        if (name === '') return;\n        onContactClose();\n        onSaveContact({\n          'id': id,\n          'name': name,\n          'email': email,\n          'phone': wallet,\n          'designation': designation,\n          'selected': selected,\n          'starred': starred,\n          'frequently': frequently\n        });\n        this.setState({\n          'id': id + 1,\n          'name': '',\n          'email': '',\n          'phone': '',\n          'designation': ''\n        });\n      },\n      onCancel: onContactClose\n    }, __jsx(\"div\", {\n      className: \"gx-modal-box-row\"\n    }, __jsx(\"div\", {\n      className: \"gx-modal-box-form-item\"\n    }, __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      required: true,\n      placeholder: \"Name\",\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      defaultValue: name,\n      margin: \"none\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      placeholder: \"Email\",\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      value: email,\n      margin: \"normal\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      placeholder: \"Phone\",\n      onChange: event => this.setState({\n        phone: event.target.value\n      }),\n      value: phone,\n      margin: \"normal\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      placeholder: \"Designation\",\n      onChange: event => this.setState({\n        designation: event.target.value\n      }),\n      value: designation,\n      autosize: {\n        minRows: 2,\n        maxRows: 6\n      },\n      margin: \"normal\"\n    })))));\n  }\n\n}\n\nexport default AddContact;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/contact/AddContact/index.js"],"names":["React","Avatar","Input","Modal","IntlMessages","AddContact","Component","constructor","props","id","thumb","name","email","wallet","designation","selected","starred","frequently","contact","state","render","onSaveContact","onContactClose","open","setState","event","target","value","phone","minRows","maxRows"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Input, Modal} from \"antd\";\r\n\r\nimport IntlMessages from \"../../../../util/IntlMessages\";\r\n\r\nclass AddContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {id, thumb, name, email, wallet, designation, selected, starred, frequently} = props.contact;\r\n    this.state = {\r\n      id,\r\n      thumb,\r\n      name,\r\n      email,\r\n      wallet,\r\n      designation,\r\n      selected,\r\n      starred,\r\n      frequently\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {onSaveContact, onContactClose, open, contact} = this.props;\r\n    const {id, name, email, wallet, designation, selected, starred, frequently} = this.state;\r\n    return (\r\n      <Modal\r\n        title={contact.name === '' ?\r\n          <IntlMessages id=\"contact.addContact\"/> :\r\n          <IntlMessages id=\"contact.saveContact\"/>}\r\n        toggle={onContactClose} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '')\r\n            return;\r\n          onContactClose();\r\n          onSaveContact(\r\n            {\r\n              'id': id,\r\n              'name': name,\r\n              'email': email,\r\n              'phone': wallet,\r\n              'designation': designation,\r\n              'selected': selected,\r\n              'starred': starred,\r\n              'frequently': frequently\r\n            });\r\n          this.setState({\r\n            'id': id + 1,\r\n            'name': '',\r\n            'email': '',\r\n            'phone': '',\r\n            'designation': '',\r\n          })\r\n\r\n        }}\r\n        onCancel={onContactClose}>\r\n\r\n        <div className=\"gx-modal-box-row\">\r\n\r\n          <div className=\"gx-modal-box-form-item\">\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                required\r\n                placeholder=\"Name\"\r\n                onChange={(event) => this.setState({name: event.target.value})}\r\n                defaultValue={name}\r\n                margin=\"none\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Email\"\r\n                onChange={(event) => this.setState({email: event.target.value})}\r\n                value={email}\r\n                margin=\"normal\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Phone\"\r\n                onChange={(event) => this.setState({phone: event.target.value})}\r\n                value={phone}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Designation\"\r\n                onChange={(event) => this.setState({designation: event.target.value})}\r\n                value={designation}\r\n                autosize={{minRows: 2, maxRows: 6}}\r\n                margin=\"normal\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n"]},"metadata":{},"sourceType":"module"}