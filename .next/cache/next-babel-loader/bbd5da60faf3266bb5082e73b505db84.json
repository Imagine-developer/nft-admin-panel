{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport { Button, Checkbox, Drawer, Dropdown, Menu, message } from \"antd\";\nimport CustomScrollbars from \"../../util/CustomScrollbars\";\nimport axios from 'axios';\nimport mails from \"./data/mails\";\nimport folders from \"./data/folders\";\nimport filters from \"./data/filters\";\nimport labels from \"./data/labels\";\nimport options from \"./data/options\";\nimport MailList from \"../../app/components/mail/MailList\";\nimport ComposeMail from \"../../app/components/mail/Compose\";\nimport AppModuleHeader from \"../../app/components/AppModuleHeader\";\nimport MailDetail from \"../../app/components/mail/MailDetail\";\nimport IntlMessages from \"../../util/IntlMessages\";\nimport CircularProgress from \"../../app/components/CircularProgress\";\nimport './index.css';\n\nvar Mail = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Mail, _PureComponent);\n\n  var _super = _createSuper(Mail);\n\n  function Mail() {\n    var _this;\n\n    _classCallCheck(this, Mail);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteMail\", function () {\n      var mails = _this.state.allMail.map(function (mail) {\n        return mail.selected && mail.folder === _this.state.selectedFolder ? _objectSpread(_objectSpread({}, mail), {}, {\n          folder: 4,\n          selected: false\n        }) : mail;\n      });\n\n      _this.setState({\n        alertMessage: 'Mail Deleted Successfully',\n        showMessage: true,\n        selectedMails: 0,\n        allMail: mails,\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNavFolders\", function () {\n      return folders.map(function (folder, index) {\n        return __jsx(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allMail.filter(function (mail) {\n              return mail.folder === folder.id;\n            });\n\n            _this.setState({\n              selectedFolder: folder.id,\n              noContentFoundMessage: 'No Mail found in selected folder',\n              currentMail: null,\n              loader: true,\n              folderMails: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          }\n        }, __jsx(\"span\", {\n          className: \"\".concat(_this.state.selectedFolder === folder.id ? 'active gx-link' : 'gx-link')\n        }, __jsx(\"i\", {\n          className: \"icon icon-\".concat(folder.icon)\n        }), __jsx(\"span\", null, folder.title)));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFolderMenuItemSelect\", function (e) {\n      var id = +e.key;\n\n      var mails = _this.state.allMail.map(function (mail) {\n        return mail.selected && mail.folder === _this.state.selectedFolder ? _objectSpread(_objectSpread({}, mail), {}, {\n          folder: id,\n          selected: false\n        }) : mail;\n      });\n\n      _this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        noContentFoundMessage: 'No Mail found in selected folder',\n        alertMessage: 'Mail has been moved successfully',\n        showMessage: true,\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLabelMenuItemSelect\", function (e) {\n      var id = +e.key;\n\n      var mails = _this.state.allMail.map(function (mail) {\n        if (mail.selected && mail.folder === _this.state.selectedFolder) {\n          if (mail.labels.includes(id)) {\n            return _objectSpread(_objectSpread({}, mail), {}, {\n              labels: _this.removeLabel(mail, id)\n            });\n          } else {\n            return _objectSpread(_objectSpread({}, mail), {}, {\n              labels: _this.addLabel(mail, id)\n            });\n          }\n        } else {\n          return mail;\n        }\n      });\n\n      _this.setState({\n        noContentFoundMessage: 'No Mail found in selected label',\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        allMail: mails,\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestClose\", function () {\n      _this.setState({\n        composeMail: false,\n        showMessage: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNavFilters\", function () {\n      return filters.map(function (filter, index) {\n        return __jsx(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allMail.filter(function (mail) {\n              if (filter.id === 0 && mail.starred && mail.folder === _this.state.selectedFolder) {\n                return mail;\n              } else if (filter.id === 1 && mail.important && mail.folder === _this.state.selectedFolder) {\n                return mail;\n              }\n\n              return null;\n            });\n\n            _this.setState({\n              noContentFoundMessage: 'No Mail found in selected filter',\n              loader: true,\n              folderMails: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          }\n        }, __jsx(\"span\", {\n          className: \"gx-link\"\n        }, __jsx(\"i\", {\n          className: \"icon icon-\".concat(filter.icon)\n        }), __jsx(\"span\", null, filter.title)));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOptionMenuItemSelect\", function (e) {\n      switch (e.key) {\n        case 'All':\n          _this.handleRequestClose();\n\n          _this.getAllMail();\n\n          break;\n\n        case 'None':\n          _this.handleRequestClose();\n\n          _this.getUnselectedAllMail();\n\n          break;\n\n        case 'Read':\n          _this.handleRequestClose();\n\n          _this.getReadMail();\n\n          break;\n\n        case 'Unread':\n          _this.handleRequestClose();\n\n          _this.getUnreadMail();\n\n          break;\n\n        case 'Starred':\n          _this.handleRequestClose();\n\n          _this.getStarredMail();\n\n          break;\n\n        case 'Unstarred':\n          _this.handleRequestClose();\n\n          _this.getUnStarredMail();\n\n          break;\n\n        case 'Important':\n          _this.handleRequestClose();\n\n          _this.getImportantMail();\n\n          break;\n\n        case 'Unimportant':\n          _this.handleRequestClose();\n\n          _this.getUnimportantMail();\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteContact\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios[\"delete\"]('http://localhost:8000/banner/' + data._id);\n\n              case 2:\n                res = _context.sent;\n                console.log(res.data);\n\n                _this.render();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getAllMail\", function () {\n      var mails = _this.state.allMail.map(function (mail) {\n        return mail.folder === _this.state.selectedFolder ? _objectSpread(_objectSpread({}, mail), {}, {\n          selected: true\n        }) : mail;\n      });\n\n      _this.setState({\n        selectedMails: mails.length,\n        allMail: mails,\n        optionName: 'All',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnselectedAllMail\", function () {\n      var mails = _this.state.allMail.map(function (mail) {\n        return mail.folder === _this.state.selectedFolder ? _objectSpread(_objectSpread({}, mail), {}, {\n          selected: false\n        }) : mail;\n      });\n\n      _this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        optionName: 'None',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getReadMail\", function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (mail.read) {\n          selectedMail++;\n          return _objectSpread(_objectSpread({}, mail), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, mail), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        optionName: 'Read',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnreadMail\", function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (!mail.read) {\n          selectedMail++;\n          return _objectSpread(_objectSpread({}, mail), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, mail), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        optionName: 'Unread',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getStarredMail\", function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (mail.starred) {\n          selectedMail++;\n          return _objectSpread(_objectSpread({}, mail), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, mail), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        optionName: 'Starred',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnStarredMail\", function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder && mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (!mail.starred) {\n          selectedMail++;\n          return _objectSpread(_objectSpread({}, mail), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, mail), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        optionName: 'UnStarred',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getImportantMail\", function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder && mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (mail.important) {\n          selectedMail++;\n          return _objectSpread(_objectSpread({}, mail), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, mail), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        optionName: 'Important',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnimportantMail\", function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder && mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (!mail.important) {\n          selectedMail++;\n          return _objectSpread(_objectSpread({}, mail), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, mail), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        optionName: 'Unimportant',\n        noContentFoundMessage: 'No Mail found in selected Label',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNavLabels\", function () {\n      return labels.map(function (label, index) {\n        return __jsx(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allMail.filter(function (mail) {\n              return mail.labels.includes(label.id) && mail.folder === _this.state.selectedFolder;\n            });\n\n            _this.setState({\n              loader: true,\n              noContentFoundMessage: 'No Mail found in selected label',\n              folderMails: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          }\n        }, __jsx(\"span\", {\n          className: \"gx-link\"\n        }, __jsx(\"i\", {\n          className: \"icon icon-tag gx-text-\".concat(label.color)\n        }), __jsx(\"span\", null, label.title)));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"searchMail\", function (searchText) {\n      if (searchText === '') {\n        _this.setState({\n          folderMails: _this.state.allMail.filter(function (mail) {\n            return !mail.deleted;\n          })\n        });\n      } else {\n        var searchMails = _this.state.allMail.filter(function (mail) {\n          return mail.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n        });\n\n        _this.setState({\n          folderMails: searchMails\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"displayMail\", function (currentMail, folderMails, noContentFoundMessage) {\n      return __jsx(\"div\", {\n        className: \"gx-module-box-column\"\n      }, currentMail === null ? folderMails.length === 0 ? __jsx(\"div\", {\n        className: \"gx-no-content-found gx-text-light gx-d-flex gx-align-items-center gx-justify-content-center\"\n      }, noContentFoundMessage) : __jsx(MailList, {\n        mails: folderMails,\n        onStartSelect: _this.onStartSelect.bind(_assertThisInitialized(_this)),\n        onMailSelect: _this.onMailSelect.bind(_assertThisInitialized(_this)),\n        onMailChecked: _this.onMailChecked.bind(_assertThisInitialized(_this)),\n        onDeleteMail: _this.onDeleteMail.bind(_assertThisInitialized(_this))\n      }) : __jsx(MailDetail, {\n        mail: currentMail,\n        onStartSelect: _this.onStartSelect.bind(_assertThisInitialized(_this)),\n        onImportantSelect: _this.onImportantSelect.bind(_assertThisInitialized(_this))\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMailActions\", function () {\n      return __jsx(\"div\", {\n        className: \"gx-flex-row gx-align-items-center\"\n      }, __jsx(Dropdown, {\n        overlay: _this.folderMenu(),\n        placement: \"bottomRight\",\n        trigger: ['click']\n      }, __jsx(\"i\", {\n        className: \"icon icon-folder gx-icon-btn\"\n      })), __jsx(Dropdown, {\n        overlay: _this.labelMenu(),\n        placement: \"bottomRight\",\n        trigger: ['click']\n      }, __jsx(\"i\", {\n        className: \"icon icon-tag gx-icon-btn\"\n      })), __jsx(\"span\", {\n        onClick: _this.onDeleteMail.bind(_assertThisInitialized(_this))\n      }, __jsx(\"i\", {\n        className: \"icon icon-trash gx-icon-btn\"\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"optionMenu\", function () {\n      return __jsx(Menu, {\n        id: \"option-menu\",\n        onClick: _this.onOptionMenuItemSelect.bind(_assertThisInitialized(_this))\n      }, options.map(function (option) {\n        return __jsx(Menu.Item, {\n          key: option.title\n        }, option.title);\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"folderMenu\", function () {\n      return __jsx(Menu, {\n        id: \"folder-menu\",\n        onClick: _this.onFolderMenuItemSelect.bind(_assertThisInitialized(_this))\n      }, folders.map(function (folder) {\n        return __jsx(Menu.Item, {\n          key: folder.id\n        }, folder.title);\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"labelMenu\", function () {\n      return __jsx(Menu, {\n        id: \"label-menu\",\n        onClick: _this.onLabelMenuItemSelect.bind(_assertThisInitialized(_this))\n      }, labels.map(function (label) {\n        return __jsx(Menu.Item, {\n          key: label.id\n        }, label.title);\n      }));\n    });\n\n    _this.state = {\n      searchMail: '',\n      noContentFoundMessage: 'No Mail found in selected folder',\n      alertMessage: '',\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allMail: mails,\n      loader: true,\n      currentMail: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedMails: 0,\n      selectedFolder: 0,\n      composeMail: false,\n      folderMails: mails.filter(function (mail) {\n        return mail.folder === 0;\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Mail, [{\n    key: \"onDeleteMail\",\n    value: function () {\n      var _onDeleteMail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios[\"delete\"]('http://localhost:8000/banner/' + data._id);\n\n              case 2:\n                res = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function onDeleteMail(_x2) {\n        return _onDeleteMail.apply(this, arguments);\n      }\n\n      return onDeleteMail;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get('http://localhost:8000/banner');\n\n              case 2:\n                result = _context3.sent;\n                console.log(result.data);\n                this.setState({\n                  loader: false,\n                  folderMails: result.data,\n                  allMail: result.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"onMailChecked\",\n    value: function onMailChecked(data) {\n      data.selected = !data.selected;\n      var selectedMail = 0;\n      var mails = this.state.folderMails.map(function (mail) {\n        if (mail.selected) {\n          selectedMail++;\n        }\n\n        if (mail.id === data.id) {\n          if (mail.selected) {\n            selectedMail++;\n          }\n\n          return data;\n        } else {\n          return mail;\n        }\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        folderMails: mails\n      });\n    }\n  }, {\n    key: \"onAllMailSelect\",\n    value: function onAllMailSelect() {\n      var selectAll = this.state.selectedMails <= this.state.folderMails.length;\n\n      if (selectAll) {\n        this.getAllMail();\n      } else {\n        this.getUnselectedAllMail();\n      }\n    }\n  }, {\n    key: \"removeLabel\",\n    value: function removeLabel(mail, label) {\n      mail.labels.splice(mail.labels.indexOf(label), 1);\n\n      if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n        this.setState({\n          currentMail: _objectSpread(_objectSpread({}, mail), {}, {\n            labels: mail.labels\n          })\n        });\n      }\n\n      return mail.labels;\n    }\n  }, {\n    key: \"onStartSelect\",\n    value: function onStartSelect(data) {\n      data.starred = !data.starred;\n      this.setState({\n        alertMessage: data.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\n        showMessage: true,\n        folderMails: this.state.folderMails.map(function (mail) {\n          return mail.id === data.id ? data : mail;\n        })\n      });\n    }\n  }, {\n    key: \"onImportantSelect\",\n    value: function onImportantSelect(data) {\n      data.important = !data.important;\n      this.setState({\n        alertMessage: data.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\n        showMessage: true,\n        folderMails: this.state.folderMails.map(function (mail) {\n          return mail.id === data.id ? data : mail;\n        })\n      });\n    }\n  }, {\n    key: \"onMailSend\",\n    value: function onMailSend(data) {\n      this.setState({\n        alertMessage: 'Mail Sent Successfully',\n        showMessage: true,\n        folderMails: this.state.allMail.concat(data),\n        allMail: this.state.allMail.concat(data)\n      });\n    }\n  }, {\n    key: \"onMailSelect\",\n    value: function onMailSelect(mail) {\n      var _this2 = this;\n\n      this.setState({\n        loader: true,\n        currentMail: mail\n      });\n      setTimeout(function () {\n        _this2.setState({\n          loader: false\n        });\n      }, 1500);\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(mail, label) {\n      if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n        this.setState({\n          currentMail: _objectSpread(_objectSpread({}, mail), {}, {\n            labels: mail.labels.concat(label)\n          })\n        });\n      }\n\n      return mail.labels.concat(label);\n    }\n  }, {\n    key: \"updateSearch\",\n    value: function updateSearch(evt) {\n      this.setState({\n        searchMail: evt.target.value\n      });\n      this.searchMail(evt.target.value);\n    }\n  }, {\n    key: \"onToggleDrawer\",\n    value: function onToggleDrawer() {\n      this.setState({\n        drawerState: !this.state.drawerState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedMails = _this$state.selectedMails,\n          loader = _this$state.loader,\n          currentMail = _this$state.currentMail,\n          drawerState = _this$state.drawerState,\n          folderMails = _this$state.folderMails,\n          composeMail = _this$state.composeMail,\n          user = _this$state.user,\n          alertMessage = _this$state.alertMessage,\n          showMessage = _this$state.showMessage,\n          noContentFoundMessage = _this$state.noContentFoundMessage;\n      return __jsx(\"div\", {\n        className: \"gx-main-content\"\n      }, __jsx(\"div\", {\n        className: \"gx-app-module\"\n      }, __jsx(\"div\", {\n        className: \"gx-d-block gx-d-lg-none\"\n      }, __jsx(Drawer, {\n        placement: \"left\",\n        closable: false,\n        visible: drawerState,\n        onClose: this.onToggleDrawer.bind(this)\n      })), __jsx(\"div\", {\n        className: \"gx-module-box\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-box-header\"\n      }, __jsx(\"span\", {\n        className: \"gx-drawer-btn gx-d-flex gx-d-lg-none\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-menu gx-icon-btn\",\n        \"aria-label\": \"Menu\",\n        onClick: this.onToggleDrawer.bind(this)\n      })), __jsx(AppModuleHeader, {\n        placeholder: \"Search mails\",\n        user: this.state.user,\n        onChange: this.updateSearch.bind(this),\n        value: this.state.searchMail\n      })), __jsx(\"div\", {\n        className: \"gx-module-box-content\"\n      }, loader ? __jsx(\"div\", {\n        className: \"gx-loader-view\"\n      }, __jsx(CircularProgress, null)) : this.displayMail(currentMail, folderMails, noContentFoundMessage), __jsx(ComposeMail, {\n        open: composeMail,\n        user: user,\n        onClose: this.handleRequestClose.bind(this),\n        onMailSend: this.onMailSend.bind(this)\n      })))), showMessage && message.info(__jsx(\"span\", {\n        id: \"message-id\"\n      }, alertMessage), 3, this.handleRequestClose));\n    }\n  }]);\n\n  return Mail;\n}(PureComponent);\n\nexport default Mail;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/routes/Banner/index.js"],"names":["React","PureComponent","Button","Checkbox","Drawer","Dropdown","Menu","message","CustomScrollbars","axios","mails","folders","filters","labels","options","MailList","ComposeMail","AppModuleHeader","MailDetail","IntlMessages","CircularProgress","Mail","state","allMail","map","mail","selected","folder","selectedFolder","setState","alertMessage","showMessage","selectedMails","folderMails","filter","index","filterMails","id","noContentFoundMessage","currentMail","loader","setTimeout","icon","title","e","key","includes","removeLabel","addLabel","composeMail","starred","important","handleRequestClose","getAllMail","getUnselectedAllMail","getReadMail","getUnreadMail","getStarredMail","getUnStarredMail","getImportantMail","getUnimportantMail","data","_id","res","console","log","render","length","optionName","selectedMail","read","label","color","searchText","deleted","searchMails","toLowerCase","indexOf","onStartSelect","bind","onMailSelect","onMailChecked","onDeleteMail","onImportantSelect","folderMenu","labelMenu","onOptionMenuItemSelect","option","onFolderMenuItemSelect","onLabelMenuItemSelect","searchMail","drawerState","anchorEl","user","name","email","avatar","get","result","selectAll","splice","concat","evt","target","value","onToggleDrawer","updateSearch","displayMail","onMailSend","info"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkDC,OAAlD,QAAgE,MAAhE;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AAEA,OAAO,aAAP;;IAGMC,I;;;;;AAmYJ,kBAAc;AAAA;;AAAA;;AACZ;;AADY,mEAhYC,YAAM;AACnB,UAAMX,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,eACvCA,IAAI,CAACC,QAAL,IAAkBD,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA7C,mCACMH,IADN;AACYE,UAAAA,MAAM,EAAE,CADpB;AACuBD,UAAAA,QAAQ,EAAE;AADjC,aAC2CD,IAFJ;AAAA,OAA3B,CAAd;;AAIA,YAAKI,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE,2BADF;AAEZC,QAAAA,WAAW,EAAE,IAFD;AAGZC,QAAAA,aAAa,EAAE,CAHH;AAIZT,QAAAA,OAAO,EAAEb,KAJG;AAKZuB,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AALD,OAAd;AAOD,KAoXa;;AAAA,oEAlXE,YAAM;AACpB,aAAOjB,OAAO,CAACa,GAAR,CAAY,UAACG,MAAD,EAASQ,KAAT;AAAA,eACjB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,mBAAM;AAC7B,gBAAMC,WAAW,GAAG,MAAKd,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI;AAAA,qBAAIA,IAAI,CAACE,MAAL,KAAgBA,MAAM,CAACU,EAA3B;AAAA,aAA9B,CAApB;;AACA,kBAAKR,QAAL,CAAc;AACZD,cAAAA,cAAc,EAAED,MAAM,CAACU,EADX;AAEZC,cAAAA,qBAAqB,EAAE,kCAFX;AAGZC,cAAAA,WAAW,EAAE,IAHD;AAIZC,cAAAA,MAAM,EAAE,IAJI;AAKZP,cAAAA,WAAW,EAAEG;AALD,aAAd;;AAOAK,YAAAA,UAAU,CAAC,YAAM;AACf,oBAAKZ,QAAL,CAAc;AAACW,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACD,aAFS,EAEP,IAFO,CAAV;AAGD;AAZD,WAcE;AAAM,UAAA,SAAS,YAAK,MAAKlB,KAAL,CAAWM,cAAX,KAA8BD,MAAM,CAACU,EAArC,GAA0C,gBAA1C,GAA6D,SAAlE;AAAf,WACE;AAAG,UAAA,SAAS,sBAAeV,MAAM,CAACe,IAAtB;AAAZ,UADF,EAEE,oBAAOf,MAAM,CAACgB,KAAd,CAFF,CAdF,CADiB;AAAA,OAAZ,CAAP;AAqBD,KA4Va;;AAAA,6EAzVW,UAACC,CAAD,EAAO;AAC9B,UAAMP,EAAE,GAAG,CAACO,CAAC,CAACC,GAAd;;AACA,UAAMnC,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,eACvCA,IAAI,CAACC,QAAL,IAAkBD,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA7C,mCACMH,IADN;AACYE,UAAAA,MAAM,EAAEU,EADpB;AACwBX,UAAAA,QAAQ,EAAE;AADlC,aAC4CD,IAFL;AAAA,OAA3B,CAAd;;AAIA,YAAKI,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAE,CADH;AAEZT,QAAAA,OAAO,EAAEb,KAFG;AAGZ4B,QAAAA,qBAAqB,EAAE,kCAHX;AAIZR,QAAAA,YAAY,EAAE,kCAJF;AAKZC,QAAAA,WAAW,EAAE,IALD;AAMZE,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAND,OAAd;AAQD,KA2Ua;;AAAA,4EAzUU,UAACgB,CAAD,EAAO;AAC7B,UAAMP,EAAE,GAAG,CAACO,CAAC,CAACC,GAAd;;AACA,UAAMnC,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI,EAAI;AACzC,YAAIA,IAAI,CAACC,QAAL,IAAkBD,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAAjD,EAAkE;AAChE,cAAIH,IAAI,CAACZ,MAAL,CAAYiC,QAAZ,CAAqBT,EAArB,CAAJ,EAA8B;AAC5B,mDAAWZ,IAAX;AAAiBZ,cAAAA,MAAM,EAAE,MAAKkC,WAAL,CAAiBtB,IAAjB,EAAuBY,EAAvB;AAAzB;AACD,WAFD,MAEO;AACL,mDAAWZ,IAAX;AAAiBZ,cAAAA,MAAM,EAAE,MAAKmC,QAAL,CAAcvB,IAAd,EAAoBY,EAApB;AAAzB;AACD;AACF,SAND,MAMO;AACL,iBAAOZ,IAAP;AACD;AACF,OAVW,CAAd;;AAYA,YAAKI,QAAL,CAAc;AACZS,QAAAA,qBAAqB,EAAE,iCADX;AAEZR,QAAAA,YAAY,EAAE,4BAFF;AAGZC,QAAAA,WAAW,EAAE,IAHD;AAIZR,QAAAA,OAAO,EAAEb,KAJG;AAKZuB,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AALD,OAAd;AAOD,KAoTa;;AAAA,yEAlTO,YAAM;AACzB,YAAKC,QAAL,CAAc;AACZoB,QAAAA,WAAW,EAAE,KADD;AAEZlB,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,KA6Sa;;AAAA,oEA5SE,YAAM;AACpB,aAAOnB,OAAO,CAACY,GAAR,CAAY,UAACU,MAAD,EAASC,KAAT;AAAA,eACjB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,mBAAM;AAC7B,gBAAMC,WAAW,GAAG,MAAKd,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI,EAAI;AACpD,kBAAIS,MAAM,CAACG,EAAP,KAAc,CAAd,IAAmBZ,IAAI,CAACyB,OAAxB,IAAmCzB,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAAlE,EAAkF;AAChF,uBAAOH,IAAP;AACD,eAFD,MAEO,IAAIS,MAAM,CAACG,EAAP,KAAc,CAAd,IAAmBZ,IAAI,CAAC0B,SAAxB,IAAqC1B,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAApE,EAAoF;AACzF,uBAAOH,IAAP;AACD;;AACD,qBAAO,IAAP;AACD,aAPmB,CAApB;;AAQA,kBAAKI,QAAL,CAAc;AACZS,cAAAA,qBAAqB,EAAE,kCADX;AAEZE,cAAAA,MAAM,EAAE,IAFI;AAGZP,cAAAA,WAAW,EAAEG;AAHD,aAAd;;AAKAK,YAAAA,UAAU,CAAC,YAAM;AACf,oBAAKZ,QAAL,CAAc;AAACW,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACD,aAFS,EAEP,IAFO,CAAV;AAGD;AAjBD,WAmBE;AAAM,UAAA,SAAS,EAAC;AAAhB,WACE;AAAG,UAAA,SAAS,sBAAeN,MAAM,CAACQ,IAAtB;AAAZ,UADF,EAEE,oBAAOR,MAAM,CAACS,KAAd,CAFF,CAnBF,CADiB;AAAA,OAAZ,CAAP;AA0BD,KAiRa;;AAAA,6EAhRW,UAACC,CAAD,EAAO;AAC9B,cAAQA,CAAC,CAACC,GAAV;AACE,aAAK,KAAL;AACE,gBAAKO,kBAAL;;AACA,gBAAKC,UAAL;;AACA;;AACF,aAAK,MAAL;AACE,gBAAKD,kBAAL;;AACA,gBAAKE,oBAAL;;AACA;;AACF,aAAK,MAAL;AACE,gBAAKF,kBAAL;;AACA,gBAAKG,WAAL;;AACA;;AACF,aAAK,QAAL;AACE,gBAAKH,kBAAL;;AACA,gBAAKI,aAAL;;AACA;;AACF,aAAK,SAAL;AACE,gBAAKJ,kBAAL;;AACA,gBAAKK,cAAL;;AACA;;AACF,aAAK,WAAL;AACE,gBAAKL,kBAAL;;AACA,gBAAKM,gBAAL;;AACA;;AACF,aAAK,WAAL;AACE,gBAAKN,kBAAL;;AACA,gBAAKO,gBAAL;;AACA;;AACF,aAAK,aAAL;AACE,gBAAKP,kBAAL;;AACA,gBAAKQ,kBAAL;;AACA;;AACF;AACE;AAlCJ;AAoCD,KA2Oa;;AAAA;AAAA,0EA1OI,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACEpD,KAAK,UAAL,CAAa,kCAAkCoD,IAAI,CAACC,GAApD,CADF;;AAAA;AACVC,gBAAAA,GADU;AAEhBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,IAAhB;;AACA,sBAAKK,MAAL;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA0OJ;;AAAA;AAAA;AAAA;AAAA;;AAAA,iEApOD,YAAM;AACjB,UAAIxD,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA3B,mCACxCH,IADwC;AAE3CC,UAAAA,QAAQ,EAAE;AAFiC,aAGzCD,IAH+B;AAAA,OAAvB,CAAZ;;AAIA,YAAKI,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAEtB,KAAK,CAACyD,MADT;AAEZ5C,QAAAA,OAAO,EAAEb,KAFG;AAGZ0D,QAAAA,UAAU,EAAE,KAHA;AAIZnC,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;AAMD,KAyNa;;AAAA,2EAxNS,YAAM;AAC3B,UAAIlB,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA3B,mCACxCH,IADwC;AAE3CC,UAAAA,QAAQ,EAAE;AAFiC,aAGzCD,IAH+B;AAAA,OAAvB,CAAZ;;AAIA,YAAKI,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAE,CADH;AAEZT,QAAAA,OAAO,EAAEb,KAFG;AAGZ0D,QAAAA,UAAU,EAAE,MAHA;AAIZnC,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;AAMD,KA6Ma;;AAAA,kEA5MA,YAAM;AAClB,UAAIyC,YAAY,GAAG,CAAnB;;AACA,UAAI3D,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACAlB,MAAAA,KAAK,GAAGA,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAIA,IAAI,CAAC6C,IAAT,EAAe;AACbD,UAAAA,YAAY;AACZ,iDAAW5C,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,+CAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKG,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAEqC,YADH;AAEZD,QAAAA,UAAU,EAAE,MAFA;AAGZnC,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAHD,OAAd;;AAKA,aAAOlB,KAAP;AACD,KA4La;;AAAA,oEA3LE,YAAM;AACpB,UAAI2D,YAAY,GAAG,CAAnB;;AACA,UAAI3D,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACAlB,MAAAA,KAAK,GAAGA,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAI,CAACA,IAAI,CAAC6C,IAAV,EAAgB;AACdD,UAAAA,YAAY;AACZ,iDAAW5C,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,+CAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKG,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAEqC,YADH;AAEZD,QAAAA,UAAU,EAAE,QAFA;AAGZnC,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAHD,OAAd;;AAKA,aAAOlB,KAAP;AACD,KA2Ka;;AAAA,qEA1KG,YAAM;AACrB,UAAI2D,YAAY,GAAG,CAAnB;;AACA,UAAI3D,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACAlB,MAAAA,KAAK,GAAGA,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAIA,IAAI,CAACyB,OAAT,EAAkB;AAChBmB,UAAAA,YAAY;AACZ,iDAAW5C,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,+CAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKG,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAEqC,YADH;AAEZD,QAAAA,UAAU,EAAE,SAFA;AAGZnC,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAHD,OAAd;;AAKA,aAAOlB,KAAP;AACD,KA0Ja;;AAAA,uEAzJK,YAAM;AACvB,UAAI2D,YAAY,GAAG,CAAnB;;AACA,UAAI3D,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA3B,IAA6CH,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA5E;AAAA,OAA9B,CAAZ;;AACAlB,MAAAA,KAAK,GAAGA,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAI,CAACA,IAAI,CAACyB,OAAV,EAAmB;AACjBmB,UAAAA,YAAY;AACZ,iDAAW5C,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,+CAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKG,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAEqC,YADH;AAEZD,QAAAA,UAAU,EAAE,WAFA;AAGZnC,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAHD,OAAd;;AAKA,aAAOlB,KAAP;AACD,KAyIa;;AAAA,uEAxIK,YAAM;AACvB,UAAI2D,YAAY,GAAG,CAAnB;;AACA,UAAI3D,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA3B,IAA6CH,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA5E;AAAA,OAA9B,CAAZ;;AACAlB,MAAAA,KAAK,GAAGA,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAIA,IAAI,CAAC0B,SAAT,EAAoB;AAClBkB,UAAAA,YAAY;AACZ,iDAAW5C,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,+CAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKG,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAEqC,YADH;AAEZD,QAAAA,UAAU,EAAE,WAFA;AAGZnC,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAHD,OAAd;;AAKA,aAAOlB,KAAP;AACD,KAwHa;;AAAA,yEAvHO,YAAM;AACzB,UAAI2D,YAAY,GAAG,CAAnB;;AACA,UAAI3D,KAAK,GAAG,MAAKY,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA3B,IAA6CH,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA5E;AAAA,OAA9B,CAAZ;;AACAlB,MAAAA,KAAK,GAAGA,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAI,CAACA,IAAI,CAAC0B,SAAV,EAAqB;AACnBkB,UAAAA,YAAY;AACZ,iDAAW5C,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,+CAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKG,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAEqC,YADH;AAEZD,QAAAA,UAAU,EAAE,aAFA;AAGZ9B,QAAAA,qBAAqB,EAAE,iCAHX;AAIZL,QAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;;AAMA,aAAOlB,KAAP;AACD,KAsGa;;AAAA,mEArGC,YAAM;AACnB,aAAOG,MAAM,CAACW,GAAP,CAAW,UAAC+C,KAAD,EAAQpC,KAAR;AAAA,eAChB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,mBAAM;AAC7B,gBAAMC,WAAW,GAAG,MAAKd,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAAAT,IAAI;AAAA,qBAAIA,IAAI,CAACZ,MAAL,CAAYiC,QAAZ,CAAqByB,KAAK,CAAClC,EAA3B,KAAkCZ,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAAjE;AAAA,aAA9B,CAApB;;AACA,kBAAKC,QAAL,CAAc;AACZW,cAAAA,MAAM,EAAE,IADI;AAEZF,cAAAA,qBAAqB,EAAE,iCAFX;AAGZL,cAAAA,WAAW,EAAEG;AAHD,aAAd;;AAKAK,YAAAA,UAAU,CAAC,YAAM;AACf,oBAAKZ,QAAL,CAAc;AAACW,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACD,aAFS,EAEP,IAFO,CAAV;AAGD;AAVD,WAYE;AAAM,UAAA,SAAS,EAAC;AAAhB,WACE;AAAG,UAAA,SAAS,kCAA2B+B,KAAK,CAACC,KAAjC;AAAZ,UADF,EAEE,oBAAOD,KAAK,CAAC5B,KAAb,CAFF,CAZF,CADgB;AAAA,OAAX,CAAP;AAmBD,KAiFa;;AAAA,iEAhFD,UAAC8B,UAAD,EAAgB;AAC3B,UAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrB,cAAK5C,QAAL,CAAc;AAACI,UAAAA,WAAW,EAAE,MAAKX,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAACT,IAAD;AAAA,mBAAU,CAACA,IAAI,CAACiD,OAAhB;AAAA,WAA1B;AAAd,SAAd;AACD,OAFD,MAEO;AACL,YAAMC,WAAW,GAAG,MAAKrD,KAAL,CAAWC,OAAX,CAAmBW,MAAnB,CAA0B,UAACT,IAAD;AAAA,iBAC5CA,IAAI,CAACkB,KAAL,CAAWiC,WAAX,GAAyBC,OAAzB,CAAiCJ,UAAU,CAACG,WAAX,EAAjC,IAA6D,CAAC,CADlB;AAAA,SAA1B,CAApB;;AAEA,cAAK/C,QAAL,CAAc;AACZI,UAAAA,WAAW,EAAE0C;AADD,SAAd;AAGD;AACF,KAsEa;;AAAA,kEAlEA,UAACpC,WAAD,EAAcN,WAAd,EAA2BK,qBAA3B,EAAqD;AACjE,aAAQ;AAAK,QAAA,SAAS,EAAC;AAAf,SACLC,WAAW,KAAK,IAAhB,GACCN,WAAW,CAACkC,MAAZ,KAAuB,CAAvB,GACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG7B,qBADH,CADF,GAKE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEL,WAAjB;AAA8B,QAAA,aAAa,EAAE,MAAK6C,aAAL,CAAmBC,IAAnB,+BAA7C;AACU,QAAA,YAAY,EAAE,MAAKC,YAAL,CAAkBD,IAAlB,+BADxB;AAEU,QAAA,aAAa,EAAE,MAAKE,aAAL,CAAmBF,IAAnB,+BAFzB;AAGU,QAAA,YAAY,EAAE,MAAKG,YAAL,CAAkBH,IAAlB;AAHxB,QANH,GAWC,MAAC,UAAD;AAAY,QAAA,IAAI,EAAExC,WAAlB;AAA+B,QAAA,aAAa,EAAE,MAAKuC,aAAL,CAAmBC,IAAnB,+BAA9C;AACY,QAAA,iBAAiB,EAAE,MAAKI,iBAAL,CAAuBJ,IAAvB;AAD/B,QAZI,CAAR;AAeD,KAkDa;;AAAA,qEAjDG,YAAM;AACrB,aAAO;AAAK,QAAA,SAAS,EAAC;AAAf,SAEL,MAAC,QAAD;AAAU,QAAA,OAAO,EAAE,MAAKK,UAAL,EAAnB;AAAsC,QAAA,SAAS,EAAC,aAAhD;AAA8D,QAAA,OAAO,EAAE,CAAC,OAAD;AAAvE,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,CAFK,EAML,MAAC,QAAD;AAAU,QAAA,OAAO,EAAE,MAAKC,SAAL,EAAnB;AAAqC,QAAA,SAAS,EAAC,aAA/C;AAA6D,QAAA,OAAO,EAAE,CAAC,OAAD;AAAtE,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,CANK,EAUL;AAAM,QAAA,OAAO,EAAE,MAAKH,YAAL,CAAkBH,IAAlB;AAAf,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,CAVK,CAAP;AAcD,KAkCa;;AAAA,iEAhCD;AAAA,aACX,MAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AACM,QAAA,OAAO,EAAE,MAAKO,sBAAL,CAA4BP,IAA5B;AADf,SAEGjE,OAAO,CAACU,GAAR,CAAY,UAAA+D,MAAM;AAAA,eACjB,MAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA,MAAM,CAAC5C;AAAvB,WACG4C,MAAM,CAAC5C,KADV,CADiB;AAAA,OAAlB,CAFH,CADW;AAAA,KAgCC;;AAAA,iEAtBD;AAAA,aACX,MAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AACM,QAAA,OAAO,EAAE,MAAK6C,sBAAL,CAA4BT,IAA5B;AADf,SAEGpE,OAAO,CAACa,GAAR,CAAY,UAAAG,MAAM;AAAA,eACjB,MAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA,MAAM,CAACU;AAAvB,WACGV,MAAM,CAACgB,KADV,CADiB;AAAA,OAAlB,CAFH,CADW;AAAA,KAsBC;;AAAA,gEAZF;AAAA,aACV,MAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AACM,QAAA,OAAO,EAAE,MAAK8C,qBAAL,CAA2BV,IAA3B;AADf,SAEGlE,MAAM,CAACW,GAAP,CAAW,UAAA+C,KAAK;AAAA,eACf,MAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA,KAAK,CAAClC;AAAtB,WACGkC,KAAK,CAAC5B,KADT,CADe;AAAA,OAAhB,CAFH,CADU;AAAA,KAYE;;AAEZ,UAAKrB,KAAL,GAAa;AACXoE,MAAAA,UAAU,EAAE,EADD;AAEXpD,MAAAA,qBAAqB,EAAE,kCAFZ;AAGXR,MAAAA,YAAY,EAAE,EAHH;AAIXC,MAAAA,WAAW,EAAE,KAJF;AAKX4D,MAAAA,WAAW,EAAE,KALF;AAMXvB,MAAAA,UAAU,EAAE,MAND;AAOXwB,MAAAA,QAAQ,EAAE,IAPC;AAQXrE,MAAAA,OAAO,EAAEb,KARE;AASX8B,MAAAA,MAAM,EAAE,IATG;AAUXD,MAAAA,WAAW,EAAE,IAVF;AAWXsD,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,gBADF;AAEJC,QAAAA,KAAK,EAAE,oBAFH;AAGJC,QAAAA,MAAM,EAAE;AAHJ,OAXK;AAgBXhE,MAAAA,aAAa,EAAE,CAhBJ;AAiBXJ,MAAAA,cAAc,EAAE,CAjBL;AAkBXqB,MAAAA,WAAW,EAAE,KAlBF;AAmBXhB,MAAAA,WAAW,EAAEvB,KAAK,CAACwB,MAAN,CAAa,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,CAApB;AAAA,OAAjB;AAnBF,KAAb;AAFY;AAuBb;;;;;mFA5FD,kBAAmBkC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBpD,KAAK,UAAL,CAAa,kCAAkCoD,IAAI,CAACC,GAApD,CADpB;;AAAA;AACQC,gBAAAA,GADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;wFA8FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACuBtD,KAAK,CAACwF,GAAN,CAAU,8BAAV,CADvB;;AAAA;AACQC,gBAAAA,MADR;AAEElC,gBAAAA,OAAO,CAACC,GAAR,CAAYiC,MAAM,CAACrC,IAAnB;AAEA,qBAAKhC,QAAL,CAAc;AAACW,kBAAAA,MAAM,EAAE,KAAT;AAAgBP,kBAAAA,WAAW,EAAEiE,MAAM,CAACrC,IAApC;AAA0CtC,kBAAAA,OAAO,EAAE2E,MAAM,CAACrC;AAA1D,iBAAd;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAQA,uBAAcA,IAAd,EAAoB;AAClBA,MAAAA,IAAI,CAACnC,QAAL,GAAgB,CAACmC,IAAI,CAACnC,QAAtB;AACA,UAAI2C,YAAY,GAAG,CAAnB;AACA,UAAM3D,KAAK,GAAG,KAAKY,KAAL,CAAWW,WAAX,CAAuBT,GAAvB,CAA2B,UAAAC,IAAI,EAAI;AAC7C,YAAIA,IAAI,CAACC,QAAT,EAAmB;AACjB2C,UAAAA,YAAY;AACb;;AACD,YAAI5C,IAAI,CAACY,EAAL,KAAYwB,IAAI,CAACxB,EAArB,EAAyB;AACvB,cAAIZ,IAAI,CAACC,QAAT,EAAmB;AACjB2C,YAAAA,YAAY;AACb;;AACD,iBAAOR,IAAP;AACD,SALD,MAKO;AACL,iBAAOpC,IAAP;AACD;AACF,OAZW,CAAd;AAcA,WAAKI,QAAL,CAAc;AACZG,QAAAA,aAAa,EAAEqC,YADH;AAEZpC,QAAAA,WAAW,EAAEvB;AAFD,OAAd;AAID;;;WAED,2BAAkB;AAChB,UAAMyF,SAAS,GAAG,KAAK7E,KAAL,CAAWU,aAAX,IAA4B,KAAKV,KAAL,CAAWW,WAAX,CAAuBkC,MAArE;;AACA,UAAIgC,SAAJ,EAAe;AACb,aAAK9C,UAAL;AACD,OAFD,MAEO;AACL,aAAKC,oBAAL;AACD;AACF;;;WAED,qBAAY7B,IAAZ,EAAkB8C,KAAlB,EAAyB;AACvB9C,MAAAA,IAAI,CAACZ,MAAL,CAAYuF,MAAZ,CAAmB3E,IAAI,CAACZ,MAAL,CAAYgE,OAAZ,CAAoBN,KAApB,CAAnB,EAA+C,CAA/C;;AACA,UAAI,KAAKjD,KAAL,CAAWiB,WAAX,KAA2B,IAA3B,IAAmCd,IAAI,CAACY,EAAL,KAAY,KAAKf,KAAL,CAAWiB,WAAX,CAAuBF,EAA1E,EAA8E;AAC5E,aAAKR,QAAL,CAAc;AACZU,UAAAA,WAAW,kCAAMd,IAAN;AAAYZ,YAAAA,MAAM,EAAEY,IAAI,CAACZ;AAAzB;AADC,SAAd;AAGD;;AACD,aAAOY,IAAI,CAACZ,MAAZ;AACD;;;WAED,uBAAcgD,IAAd,EAAoB;AAClBA,MAAAA,IAAI,CAACX,OAAL,GAAe,CAACW,IAAI,CAACX,OAArB;AACA,WAAKrB,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE+B,IAAI,CAACX,OAAL,GAAe,mBAAf,GAAqC,qBADvC;AAEZnB,QAAAA,WAAW,EAAE,IAFD;AAGZE,QAAAA,WAAW,EAAE,KAAKX,KAAL,CAAWW,WAAX,CAAuBT,GAAvB,CAA2B,UAAAC,IAAI;AAAA,iBAC1CA,IAAI,CAACY,EAAL,KAAYwB,IAAI,CAACxB,EAAjB,GACEwB,IADF,GACSpC,IAFiC;AAAA,SAA/B;AAHD,OAAd;AAQD;;;WAED,2BAAkBoC,IAAlB,EAAwB;AACtBA,MAAAA,IAAI,CAACV,SAAL,GAAiB,CAACU,IAAI,CAACV,SAAvB;AACA,WAAKtB,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE+B,IAAI,CAACV,SAAL,GAAiB,wBAAjB,GAA4C,0BAD9C;AAEZpB,QAAAA,WAAW,EAAE,IAFD;AAGZE,QAAAA,WAAW,EAAE,KAAKX,KAAL,CAAWW,WAAX,CAAuBT,GAAvB,CAA2B,UAAAC,IAAI;AAAA,iBAC1CA,IAAI,CAACY,EAAL,KAAYwB,IAAI,CAACxB,EAAjB,GACEwB,IADF,GACSpC,IAFiC;AAAA,SAA/B;AAHD,OAAd;AAQD;;;WAED,oBAAWoC,IAAX,EAAiB;AACf,WAAKhC,QAAL,CACE;AACEC,QAAAA,YAAY,EAAE,wBADhB;AAEEC,QAAAA,WAAW,EAAE,IAFf;AAGEE,QAAAA,WAAW,EAAE,KAAKX,KAAL,CAAWC,OAAX,CAAmB8E,MAAnB,CAA0BxC,IAA1B,CAHf;AAIEtC,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmB8E,MAAnB,CAA0BxC,IAA1B;AAJX,OADF;AAQD;;;WAED,sBAAapC,IAAb,EAAmB;AAAA;;AACjB,WAAKI,QAAL,CAAc;AACZW,QAAAA,MAAM,EAAE,IADI;AAEZD,QAAAA,WAAW,EAAEd;AAFD,OAAd;AAIAgB,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACZ,QAAL,CAAc;AAACW,UAAAA,MAAM,EAAE;AAAT,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;;WAED,kBAASf,IAAT,EAAe8C,KAAf,EAAsB;AACpB,UAAI,KAAKjD,KAAL,CAAWiB,WAAX,KAA2B,IAA3B,IAAmCd,IAAI,CAACY,EAAL,KAAY,KAAKf,KAAL,CAAWiB,WAAX,CAAuBF,EAA1E,EAA8E;AAC5E,aAAKR,QAAL,CAAc;AACZU,UAAAA,WAAW,kCAAMd,IAAN;AAAYZ,YAAAA,MAAM,EAAEY,IAAI,CAACZ,MAAL,CAAYwF,MAAZ,CAAmB9B,KAAnB;AAApB;AADC,SAAd;AAGD;;AACD,aAAO9C,IAAI,CAACZ,MAAL,CAAYwF,MAAZ,CAAmB9B,KAAnB,CAAP;AACD;;;WAED,sBAAa+B,GAAb,EAAkB;AAChB,WAAKzE,QAAL,CAAc;AACZ6D,QAAAA,UAAU,EAAEY,GAAG,CAACC,MAAJ,CAAWC;AADX,OAAd;AAGA,WAAKd,UAAL,CAAgBY,GAAG,CAACC,MAAJ,CAAWC,KAA3B;AACD;;;WAED,0BAAiB;AACf,WAAK3E,QAAL,CAAc;AACZ8D,QAAAA,WAAW,EAAE,CAAC,KAAKrE,KAAL,CAAWqE;AADb,OAAd;AAGD;;;WAED,kBAAS;AACP,wBAA4I,KAAKrE,KAAjJ;AAAA,UAAOU,aAAP,eAAOA,aAAP;AAAA,UAAsBQ,MAAtB,eAAsBA,MAAtB;AAAA,UAA8BD,WAA9B,eAA8BA,WAA9B;AAAA,UAA2CoD,WAA3C,eAA2CA,WAA3C;AAAA,UAAwD1D,WAAxD,eAAwDA,WAAxD;AAAA,UAAqEgB,WAArE,eAAqEA,WAArE;AAAA,UAAkF4C,IAAlF,eAAkFA,IAAlF;AAAA,UAAwF/D,YAAxF,eAAwFA,YAAxF;AAAA,UAAsGC,WAAtG,eAAsGA,WAAtG;AAAA,UAAmHO,qBAAnH,eAAmHA,qBAAnH;AACA,aAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,MAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,OAAO,EAAEqD,WAHX;AAIE,QAAA,OAAO,EAAE,KAAKc,cAAL,CAAoB1B,IAApB,CAAyB,IAAzB;AAJX,QADF,CAFF,EAYE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACI;AAAG,QAAA,SAAS,EAAC,4BAAb;AAA0C,sBAAW,MAArD;AACG,QAAA,OAAO,EAAE,KAAK0B,cAAL,CAAoB1B,IAApB,CAAyB,IAAzB;AADZ,QADJ,CADF,EAKE,MAAC,eAAD;AAAiB,QAAA,WAAW,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAE,KAAKzD,KAAL,CAAWuE,IAA7D;AACiB,QAAA,QAAQ,EAAE,KAAKa,YAAL,CAAkB3B,IAAlB,CAAuB,IAAvB,CAD3B;AAEiB,QAAA,KAAK,EAAE,KAAKzD,KAAL,CAAWoE;AAFnC,QALF,CADF,EAYE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEGlD,MAAM,GACL;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,gBAAD,OADF,CADK,GAIH,KAAKmE,WAAL,CAAiBpE,WAAjB,EAA8BN,WAA9B,EAA2CK,qBAA3C,CANN,EAQE,MAAC,WAAD;AAAa,QAAA,IAAI,EAAEW,WAAnB;AAAgC,QAAA,IAAI,EAAE4C,IAAtC;AACa,QAAA,OAAO,EAAE,KAAKzC,kBAAL,CAAwB2B,IAAxB,CAA6B,IAA7B,CADtB;AAEa,QAAA,UAAU,EAAE,KAAK6B,UAAL,CAAgB7B,IAAhB,CAAqB,IAArB;AAFzB,QARF,CAZF,CAZF,CADF,EAwCGhD,WAAW,IAAIxB,OAAO,CAACsG,IAAR,CAAa;AAAM,QAAA,EAAE,EAAC;AAAT,SAAuB/E,YAAvB,CAAb,EAA0D,CAA1D,EAA6D,KAAKsB,kBAAlE,CAxClB,CAFF;AA6CD;;;;EAhkBgBnD,a;;AAmkBnB,eAAeoB,IAAf","sourcesContent":["import React, {PureComponent} from \"react\";\r\nimport {Button, Checkbox, Drawer, Dropdown, Menu, message} from \"antd\";\r\nimport CustomScrollbars from \"../../util/CustomScrollbars\";\r\nimport axios from 'axios'\r\n\r\nimport mails from \"./data/mails\";\r\nimport folders from \"./data/folders\";\r\nimport filters from \"./data/filters\";\r\nimport labels from \"./data/labels\";\r\nimport options from \"./data/options\";\r\nimport MailList from \"../../app/components/mail/MailList\";\r\nimport ComposeMail from \"../../app/components/mail/Compose\";\r\nimport AppModuleHeader from \"../../app/components/AppModuleHeader\";\r\nimport MailDetail from \"../../app/components/mail/MailDetail\";\r\nimport IntlMessages from \"../../util/IntlMessages\";\r\nimport CircularProgress from \"../../app/components/CircularProgress\";\r\n\r\nimport './index.css';\r\n\r\n\r\nclass Mail extends PureComponent {\r\n  \r\n\r\n  onDeleteMail = () => {\r\n    const mails = this.state.allMail.map(mail =>\r\n      mail.selected && (mail.folder === this.state.selectedFolder) ?\r\n        {...mail, folder: 4, selected: false,} : mail\r\n    );\r\n    this.setState({\r\n      alertMessage: 'Mail Deleted Successfully',\r\n      showMessage: true,\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n\r\n  getNavFolders = () => {\r\n    return folders.map((folder, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => mail.folder === folder.id);\r\n        this.setState({\r\n          selectedFolder: folder.id,\r\n          noContentFoundMessage: 'No Mail found in selected folder',\r\n          currentMail: null,\r\n          loader: true,\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className={`${this.state.selectedFolder === folder.id ? 'active gx-link' : 'gx-link'}`}>\r\n          <i className={`icon icon-${folder.icon}`}/>\r\n          <span>{folder.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n\r\n\r\n  onFolderMenuItemSelect = (e) => {\r\n    const id = +e.key;\r\n    const mails = this.state.allMail.map(mail =>\r\n      mail.selected && (mail.folder === this.state.selectedFolder) ?\r\n        {...mail, folder: id, selected: false,} : mail\r\n    );\r\n    this.setState({\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      noContentFoundMessage: 'No Mail found in selected folder',\r\n      alertMessage: 'Mail has been moved successfully',\r\n      showMessage: true,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n\r\n  onLabelMenuItemSelect = (e) => {\r\n    const id = +e.key;\r\n    const mails = this.state.allMail.map(mail => {\r\n        if (mail.selected && (mail.folder === this.state.selectedFolder)) {\r\n          if (mail.labels.includes(id)) {\r\n            return {...mail, labels: this.removeLabel(mail, id)};\r\n          } else {\r\n            return {...mail, labels: this.addLabel(mail, id)};\r\n          }\r\n        } else {\r\n          return mail;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      noContentFoundMessage: 'No Mail found in selected label',\r\n      alertMessage: 'Label Updated Successfully',\r\n      showMessage: true,\r\n      allMail: mails,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({\r\n      composeMail: false,\r\n      showMessage: false,\r\n    });\r\n  };\r\n  getNavFilters = () => {\r\n    return filters.map((filter, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => {\r\n          if (filter.id === 0 && mail.starred && mail.folder === this.state.selectedFolder) {\r\n            return mail\r\n          } else if (filter.id === 1 && mail.important && mail.folder === this.state.selectedFolder) {\r\n            return mail\r\n          }\r\n          return null;\r\n        });\r\n        this.setState({\r\n          noContentFoundMessage: 'No Mail found in selected filter',\r\n          loader: true,\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"gx-link\">\r\n          <i className={`icon icon-${filter.icon}`}/>\r\n          <span>{filter.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  onOptionMenuItemSelect = (e) => {\r\n    switch (e.key) {\r\n      case 'All':\r\n        this.handleRequestClose();\r\n        this.getAllMail();\r\n        break;\r\n      case 'None':\r\n        this.handleRequestClose();\r\n        this.getUnselectedAllMail();\r\n        break;\r\n      case 'Read':\r\n        this.handleRequestClose();\r\n        this.getReadMail();\r\n        break;\r\n      case 'Unread':\r\n        this.handleRequestClose();\r\n        this.getUnreadMail();\r\n        break;\r\n      case 'Starred':\r\n        this.handleRequestClose();\r\n        this.getStarredMail();\r\n        break;\r\n      case 'Unstarred':\r\n        this.handleRequestClose();\r\n        this.getUnStarredMail();\r\n        break;\r\n      case 'Important':\r\n        this.handleRequestClose();\r\n        this.getImportantMail();\r\n        break;\r\n      case 'Unimportant':\r\n        this.handleRequestClose();\r\n        this.getUnimportantMail();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  onDeleteContact = async (data) => {\r\n    const res = await axios.delete('http://localhost:8000/banner/' + data._id)\r\n    console.log(res.data)\r\n    this.render()\r\n\r\n  };\r\n  getAllMail = () => {\r\n    let mails = this.state.allMail.map((mail) => mail.folder === this.state.selectedFolder ? {\r\n      ...mail,\r\n      selected: true\r\n    } : mail);\r\n    this.setState({\r\n      selectedMails: mails.length,\r\n      allMail: mails,\r\n      optionName: 'All',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  getUnselectedAllMail = () => {\r\n    let mails = this.state.allMail.map((mail) => mail.folder === this.state.selectedFolder ? {\r\n      ...mail,\r\n      selected: false\r\n    } : mail);\r\n    this.setState({\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      optionName: 'None',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  getReadMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.read) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      optionName: 'Read',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnreadMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.read) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      optionName: 'Unread',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getStarredMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.starred) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      optionName: 'Starred',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnStarredMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder && mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.starred) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      optionName: 'UnStarred',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getImportantMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder && mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.important) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      optionName: 'Important',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnimportantMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder && mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.important) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      optionName: 'Unimportant',\r\n      noContentFoundMessage: 'No Mail found in selected Label',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getNavLabels = () => {\r\n    return labels.map((label, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => mail.labels.includes(label.id) && mail.folder === this.state.selectedFolder);\r\n        this.setState({\r\n          loader: true,\r\n          noContentFoundMessage: 'No Mail found in selected label',\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"gx-link\">\r\n          <i className={`icon icon-tag gx-text-${label.color}`}/>\r\n          <span>{label.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  searchMail = (searchText) => {\r\n    if (searchText === '') {\r\n      this.setState({folderMails: this.state.allMail.filter((mail) => !mail.deleted)});\r\n    } else {\r\n      const searchMails = this.state.allMail.filter((mail) =>\r\n        mail.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\r\n      this.setState({\r\n        folderMails: searchMails\r\n      });\r\n    }\r\n  };\r\n  async onDeleteMail(data){\r\n    const res = await axios.delete('http://localhost:8000/banner/' + data._id)\r\n  }\r\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\r\n    return (<div className=\"gx-module-box-column\">\r\n      {currentMail === null ?\r\n        folderMails.length === 0 ?\r\n          <div className=\"gx-no-content-found gx-text-light gx-d-flex gx-align-items-center gx-justify-content-center\">\r\n            {noContentFoundMessage}\r\n          </div>\r\n          :\r\n          <MailList mails={folderMails} onStartSelect={this.onStartSelect.bind(this)}\r\n                    onMailSelect={this.onMailSelect.bind(this)}\r\n                    onMailChecked={this.onMailChecked.bind(this)}\r\n                    onDeleteMail={this.onDeleteMail.bind(this)}/>\r\n        :\r\n        <MailDetail mail={currentMail} onStartSelect={this.onStartSelect.bind(this)}\r\n                    onImportantSelect={this.onImportantSelect.bind(this)}/>}\r\n    </div>)\r\n  };\r\n  getMailActions = () => {\r\n    return <div className=\"gx-flex-row gx-align-items-center\">\r\n\r\n      <Dropdown overlay={this.folderMenu()} placement=\"bottomRight\" trigger={['click']}>\r\n        <i className=\"icon icon-folder gx-icon-btn\"/>\r\n      </Dropdown>\r\n\r\n      <Dropdown overlay={this.labelMenu()} placement=\"bottomRight\" trigger={['click']}>\r\n        <i className=\"icon icon-tag gx-icon-btn\"/>\r\n      </Dropdown>\r\n\r\n      <span onClick={this.onDeleteMail.bind(this)}>\r\n        <i className=\"icon icon-trash gx-icon-btn\"/></span>\r\n\r\n    </div>\r\n  };\r\n\r\n  optionMenu = () => (\r\n    <Menu id=\"option-menu\"\r\n          onClick={this.onOptionMenuItemSelect.bind(this)}>\r\n      {options.map(option =>\r\n        <Menu.Item key={option.title}>\r\n          {option.title}\r\n        </Menu.Item>,\r\n      )}\r\n    </Menu>);\r\n\r\n  folderMenu = () => (\r\n    <Menu id=\"folder-menu\"\r\n          onClick={this.onFolderMenuItemSelect.bind(this)}>\r\n      {folders.map(folder =>\r\n        <Menu.Item key={folder.id}>\r\n          {folder.title}\r\n        </Menu.Item>,\r\n      )}\r\n    </Menu>);\r\n\r\n  labelMenu = () => (\r\n    <Menu id=\"label-menu\"\r\n          onClick={this.onLabelMenuItemSelect.bind(this)}>\r\n      {labels.map(label =>\r\n        <Menu.Item key={label.id}>\r\n          {label.title}\r\n        </Menu.Item>,\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchMail: '',\r\n      noContentFoundMessage: 'No Mail found in selected folder',\r\n      alertMessage: '',\r\n      showMessage: false,\r\n      drawerState: false,\r\n      optionName: 'None',\r\n      anchorEl: null,\r\n      allMail: mails,\r\n      loader: true,\r\n      currentMail: null,\r\n      user: {\r\n        name: 'Robert Johnson',\r\n        email: 'robert@example.com',\r\n        avatar: 'https://via.placeholder.com/150x150'\r\n      },\r\n      selectedMails: 0,\r\n      selectedFolder: 0,\r\n      composeMail: false,\r\n      folderMails: mails.filter(mail => mail.folder === 0)\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const result = await axios.get('http://localhost:8000/banner')\r\n    console.log(result.data)\r\n\r\n    this.setState({loader: false, folderMails: result.data, allMail: result.data})\r\n  }\r\n\r\n\r\n  onMailChecked(data) {\r\n    data.selected = !data.selected;\r\n    let selectedMail = 0;\r\n    const mails = this.state.folderMails.map(mail => {\r\n        if (mail.selected) {\r\n          selectedMail++;\r\n        }\r\n        if (mail.id === data.id) {\r\n          if (mail.selected) {\r\n            selectedMail++;\r\n          }\r\n          return data;\r\n        } else {\r\n          return mail;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      folderMails: mails\r\n    });\r\n  }\r\n\r\n  onAllMailSelect() {\r\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\r\n    if (selectAll) {\r\n      this.getAllMail();\r\n    } else {\r\n      this.getUnselectedAllMail();\r\n    }\r\n  }\r\n\r\n  removeLabel(mail, label) {\r\n    mail.labels.splice(mail.labels.indexOf(label), 1);\r\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\r\n      this.setState({\r\n        currentMail: {...mail, labels: mail.labels}\r\n      })\r\n    }\r\n    return mail.labels;\r\n  }\r\n\r\n  onStartSelect(data) {\r\n    data.starred = !data.starred;\r\n    this.setState({\r\n      alertMessage: data.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\r\n      showMessage: true,\r\n      folderMails: this.state.folderMails.map(mail =>\r\n        mail.id === data.id ?\r\n          data : mail\r\n      )\r\n    });\r\n  }\r\n\r\n  onImportantSelect(data) {\r\n    data.important = !data.important;\r\n    this.setState({\r\n      alertMessage: data.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\r\n      showMessage: true,\r\n      folderMails: this.state.folderMails.map(mail =>\r\n        mail.id === data.id ?\r\n          data : mail\r\n      )\r\n    });\r\n  }\r\n\r\n  onMailSend(data) {\r\n    this.setState(\r\n      {\r\n        alertMessage: 'Mail Sent Successfully',\r\n        showMessage: true,\r\n        folderMails: this.state.allMail.concat(data),\r\n        allMail: this.state.allMail.concat(data)\r\n      }\r\n    );\r\n  }\r\n\r\n  onMailSelect(mail) {\r\n    this.setState({\r\n      loader: true,\r\n      currentMail: mail,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  }\r\n\r\n  addLabel(mail, label) {\r\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\r\n      this.setState({\r\n        currentMail: {...mail, labels: mail.labels.concat(label)}\r\n      })\r\n    }\r\n    return mail.labels.concat(label)\r\n  }\r\n\r\n  updateSearch(evt) {\r\n    this.setState({\r\n      searchMail: evt.target.value,\r\n    });\r\n    this.searchMail(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {selectedMails, loader, currentMail, drawerState, folderMails, composeMail, user, alertMessage, showMessage, noContentFoundMessage} = this.state;\r\n    return (\r\n\r\n      <div className=\"gx-main-content\">\r\n        <div className=\"gx-app-module\">\r\n\r\n          <div className=\"gx-d-block gx-d-lg-none\">\r\n            <Drawer\r\n              placement=\"left\"\r\n              closable={false}\r\n              visible={drawerState}\r\n              onClose={this.onToggleDrawer.bind(this)}>\r\n            </Drawer>\r\n\r\n          </div>\r\n\r\n          <div className=\"gx-module-box\">\r\n            <div className=\"gx-module-box-header\">\r\n              <span className=\"gx-drawer-btn gx-d-flex gx-d-lg-none\">\r\n                  <i className=\"icon icon-menu gx-icon-btn\" aria-label=\"Menu\"\r\n                     onClick={this.onToggleDrawer.bind(this)}/>\r\n              </span>\r\n              <AppModuleHeader placeholder=\"Search mails\" user={this.state.user}\r\n                               onChange={this.updateSearch.bind(this)}\r\n                               value={this.state.searchMail}/>\r\n\r\n            </div>\r\n\r\n            <div className=\"gx-module-box-content\">\r\n\r\n              {loader ?\r\n                <div className=\"gx-loader-view\">\r\n                  <CircularProgress/>\r\n                </div>\r\n                : this.displayMail(currentMail, folderMails, noContentFoundMessage)}\r\n\r\n              <ComposeMail open={composeMail} user={user}\r\n                           onClose={this.handleRequestClose.bind(this)}\r\n                           onMailSend={this.onMailSend.bind(this)}/>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {showMessage && message.info(<span id=\"message-id\">{alertMessage}</span>, 3, this.handleRequestClose)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Mail;\r\n"]},"metadata":{},"sourceType":"module"}