{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Layout, message } from \"antd\";\nimport { connect, useSelector } from \"react-redux\";\nimport Sidebar from \"../Sidebar\";\nimport { NAV_STYLE_ABOVE_HEADER, NAV_STYLE_BELOW_HEADER, NAV_STYLE_DARK_HORIZONTAL, NAV_STYLE_DEFAULT_HORIZONTAL, NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_INSIDE_HEADER_HORIZONTAL, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, THEME_TYPE_DARK } from \"../../../constants/ThemeSetting\";\nimport Customizer from \"../Customizer\";\nimport { isUnRestrictedRoute, useAuth } from \"../../../util/use-auth\";\nimport { useRouter } from \"next/router\";\nimport CircularProgress from \"../../components/CircularProgress\";\nconst {\n  Content,\n  Footer\n} = Layout;\nconst today = new Date();\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    authUser,\n    loadingAuthUser,\n    error\n  } = useAuth();\n  const {\n    themeType,\n    navStyle\n  } = useSelector(({\n    settings\n  }) => settings);\n  const router = useRouter();\n\n  const getContainerClass = navStyle => {\n    switch (navStyle) {\n      case NAV_STYLE_DARK_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_DEFAULT_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_INSIDE_HEADER_HORIZONTAL:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_BELOW_HEADER:\n        return \"gx-container-wrap\";\n\n      case NAV_STYLE_ABOVE_HEADER:\n        return \"gx-container-wrap\";\n\n      default:\n        return '';\n    }\n  };\n\n  useEffect(() => {\n    if (error) {\n      message.error(error.toString()).then(r => r);\n    }\n  }, [error]);\n  useEffect(() => {\n    if (!loadingAuthUser) {\n      if (!authUser && !isUnRestrictedRoute(router.pathname)) {\n        router.push('/signin').then(r => r);\n      } else if (authUser && isUnRestrictedRoute(router.pathname)) {\n        router.push('/').then(r => r);\n      }\n    }\n  }, [authUser, loadingAuthUser, router.pathname]);\n  let bodyClass = \"\";\n\n  if (themeType === THEME_TYPE_DARK) {\n    bodyClass = \"dark-theme\";\n  }\n\n  if (loadingAuthUser) {\n    return __jsx(\"div\", {\n      className: \"gx-loader-view\"\n    }, __jsx(CircularProgress, null));\n  }\n\n  return isUnRestrictedRoute(router.pathname) ? children : __jsx(Layout, {\n    className: `gx-app-layout ${bodyClass}`\n  }, __jsx(Sidebar, null), __jsx(Layout, null, __jsx(Content, {\n    className: `gx-layout-content ${getContainerClass(navStyle)}`\n  }, __jsx(\"div\", {\n    className: \"gx-main-content-wrapper\"\n  }, children))), __jsx(Customizer, null));\n};\n\nexport default AppLayout;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/core/Layout/index.js"],"names":["React","useEffect","Layout","message","connect","useSelector","Sidebar","NAV_STYLE_ABOVE_HEADER","NAV_STYLE_BELOW_HEADER","NAV_STYLE_DARK_HORIZONTAL","NAV_STYLE_DEFAULT_HORIZONTAL","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_INSIDE_HEADER_HORIZONTAL","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","THEME_TYPE_DARK","Customizer","isUnRestrictedRoute","useAuth","useRouter","CircularProgress","Content","Footer","today","Date","AppLayout","children","authUser","loadingAuthUser","error","themeType","navStyle","settings","router","getContainerClass","toString","then","r","pathname","push","bodyClass"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {Layout, message} from \"antd\";\r\nimport {connect, useSelector} from \"react-redux\";\r\n\r\nimport Sidebar from \"../Sidebar\";\r\nimport {\r\n  NAV_STYLE_ABOVE_HEADER,\r\n  NAV_STYLE_BELOW_HEADER,\r\n  NAV_STYLE_DARK_HORIZONTAL,\r\n  NAV_STYLE_DEFAULT_HORIZONTAL,\r\n  NAV_STYLE_DRAWER,\r\n  NAV_STYLE_FIXED,\r\n  NAV_STYLE_INSIDE_HEADER_HORIZONTAL,\r\n  NAV_STYLE_MINI_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\r\n  THEME_TYPE_DARK\r\n} from \"../../../constants/ThemeSetting\";\r\nimport Customizer from \"../Customizer\";\r\nimport {isUnRestrictedRoute, useAuth} from \"../../../util/use-auth\";\r\nimport {useRouter} from \"next/router\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst {Content, Footer} = Layout;\r\nconst today = new Date();\r\n\r\nconst AppLayout = ({children}) => {\r\n  const {authUser, loadingAuthUser, error} = useAuth();\r\n  const {themeType, navStyle} = useSelector(({settings}) => settings);\r\n  const router = useRouter();\r\n\r\n  const getContainerClass = (navStyle) => {\r\n    switch (navStyle) {\r\n      case NAV_STYLE_DARK_HORIZONTAL:\r\n        return \"gx-container-wrap\";\r\n      case NAV_STYLE_DEFAULT_HORIZONTAL:\r\n        return \"gx-container-wrap\";\r\n      case NAV_STYLE_INSIDE_HEADER_HORIZONTAL:\r\n        return \"gx-container-wrap\";\r\n      case NAV_STYLE_BELOW_HEADER:\r\n        return \"gx-container-wrap\";\r\n      case NAV_STYLE_ABOVE_HEADER:\r\n        return \"gx-container-wrap\";\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      message.error(error.toString()).then(r => r);\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!loadingAuthUser) {\r\n      if (!authUser && !isUnRestrictedRoute(router.pathname)) {\r\n        router.push('/signin').then(r => r);\r\n      } else if (authUser && isUnRestrictedRoute(router.pathname)) {\r\n        router.push('/').then(r => r);\r\n      }\r\n    }\r\n  }, [authUser, loadingAuthUser, router.pathname])\r\n\r\n  let bodyClass = \"\";\r\n  if (themeType === THEME_TYPE_DARK) {\r\n    bodyClass = \"dark-theme\"\r\n  }\r\n\r\n  if (loadingAuthUser) {\r\n    return <div className=\"gx-loader-view\">\r\n      <CircularProgress/>\r\n    </div>;\r\n  }\r\n\r\n  return isUnRestrictedRoute(router.pathname) ? children : (\r\n    <Layout className={`gx-app-layout ${bodyClass}`}>\r\n      <Sidebar/>\r\n      <Layout>\r\n        <Content className={`gx-layout-content ${getContainerClass(navStyle)}`}>\r\n          <div className=\"gx-main-content-wrapper\">\r\n            {children}\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n      <Customizer/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AppLayout;\r\n\r\n"]},"metadata":{},"sourceType":"module"}