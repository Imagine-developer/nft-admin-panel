{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Avatar, Checkbox, Dropdown, Menu } from \"antd\";\nimport AddContact from \"../../AddContact/index\";\nimport AddToken from '../../AddToken';\nconst options = ['Edit', 'Delete'];\n\nclass ContactCell extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"onContactClose\", () => {\n      this.setState({\n        addContactState: false\n      });\n    });\n\n    _defineProperty(this, \"onDeleteContact\", contact => {\n      this.setState({\n        addContactState: false\n      });\n      this.props.onDeleteContact(contact);\n    });\n\n    _defineProperty(this, \"onEditContact\", () => {\n      this.setState({\n        addContactState: true\n      });\n    });\n\n    _defineProperty(this, \"menus\", () => __jsx(Menu, {\n      onClick: e => {\n        if (e.key === 'Edit') {\n          this.onEditContact();\n        } else {\n          this.onDeleteContact(this.props.contact);\n        }\n      }\n    }, options.map(option => __jsx(Menu.Item, {\n      key: option\n    }, option))));\n\n    this.state = {\n      addContactState: false\n    };\n  }\n\n  render() {\n    const {\n      contact,\n      onContactSelect,\n      onSaveContact\n    } = this.props;\n    const {\n      addContactState\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"gx-contact-item\"\n    }, contact.description ? __jsx(\"div\", {\n      className: \"gx-module-list-icon\"\n    }, __jsx(\"div\", {\n      className: \"gx-ml-2 gx-d-none gx-d-sm-flex\"\n    }, __jsx(Avatar, {\n      size: \"large\",\n      src: contact.img\n    }))) : null, __jsx(\"div\", {\n      className: \"gx-module-list-info gx-contact-list-info\"\n    }, __jsx(\"div\", {\n      className: \"gx-module-contact-content\"\n    }, __jsx(\"p\", {\n      className: \"gx-mb-1\"\n    }, contact.description ? __jsx(\"span\", {\n      className: \"gx-text-truncate gx-contact-name\"\n    }, \" \", contact.collect, \" \") : __jsx(\"span\", {\n      className: \"gx-text-truncate gx-contact-name\"\n    }, \" \", contact.name, \" \")), __jsx(\"div\", {\n      className: \"gx-text-muted\"\n    }, contact.description ? __jsx(\"span\", {\n      className: \"gx-email gx-d-inline-block gx-mr-2\"\n    }, contact.description, \",\") : __jsx(\"span\", {\n      className: \"gx-email gx-d-inline-block gx-mr-2\"\n    }, contact.email, \",\"), contact.description ? __jsx(\"span\", {\n      className: \"gx-phone gx-d-inline-block\"\n    }) : __jsx(\"span\", {\n      className: \"gx-phone gx-d-inline-block\"\n    }, contact.wallet))), __jsx(\"div\", {\n      className: \"gx-module-contact-right\"\n    }, __jsx(Dropdown, {\n      overlay: this.menus(),\n      placement: \"bottomRight\",\n      trigger: ['click']\n    }, __jsx(\"i\", {\n      className: \"gx-icon-btn icon icon-ellipse-v\"\n    })), addContactState && [contact.description ? __jsx(AddToken, {\n      open: addContactState,\n      contact: contact,\n      onSaveContact: onSaveContact,\n      onContactClose: this.onContactClose,\n      onDeleteContact: this.onDeleteContact\n    }) : __jsx(AddContact, {\n      open: addContactState,\n      contact: contact,\n      onSaveContact: onSaveContact,\n      onContactClose: this.onContactClose,\n      onDeleteContact: this.onDeleteContact\n    })])));\n  }\n\n}\n\nexport default ContactCell;","map":null,"metadata":{},"sourceType":"module"}