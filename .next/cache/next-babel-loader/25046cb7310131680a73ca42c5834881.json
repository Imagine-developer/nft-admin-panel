{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return createStore(reducers, initialState, bindMiddleware([thunk]));\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/redux/store/index.js"],"names":["applyMiddleware","createStore","thunk","reducers","bindMiddleware","middleware","require","composeWithDevTools","configureStore","initialState"],"mappings":";AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,UAAU,EAAI;AACnC,YAA2C;AACzC,mBAA8BC,OAAO,CAAC,0BAAD,CAArC;AAAA,QAAOC,mBAAP,YAAOA,mBAAP;;AACA,WAAOA,mBAAmB,CAACP,eAAe,MAAf,4BAAmBK,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAOL,eAAe,MAAf,4BAAmBK,UAAnB,EAAP;AACD,CAND;;AAQA,SAASG,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACzC,SAAOR,WAAW,CAACE,QAAD,EAAWM,YAAX,EAAyBL,cAAc,CAAC,CAACF,KAAD,CAAD,CAAvC,CAAlB;AACD;;AAED,eAAeM,cAAf","sourcesContent":["import {applyMiddleware, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers';\r\n\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const {composeWithDevTools} = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = {}) {\r\n  return createStore(reducers, initialState, bindMiddleware([thunk]));\r\n}\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}