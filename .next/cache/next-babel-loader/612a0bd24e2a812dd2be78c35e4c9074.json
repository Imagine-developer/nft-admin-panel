{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Input, Modal, Checkbox, Select } from \"antd\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\nvar AddContact = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddContact, _React$Component);\n\n  var _super = _createSuper(AddContact);\n\n  function AddContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    _this = _super.call(this, props);\n    var TextArea = {\n      Input: Input\n    };\n    var Option = {\n      Select: Select\n    };\n    var _props$contact = props.contact,\n        id = _props$contact.id,\n        collect = _props$contact.collect,\n        description = _props$contact.description,\n        img = _props$contact.img,\n        royalty = _props$contact.royalty,\n        title = _props$contact.title,\n        pdf = _props$contact.pdf;\n    _this.state = {\n      id: id,\n      title: title,\n      collect: collect,\n      description: description,\n      verified: false,\n      img: img,\n      pdf: pdf,\n      royalty: royalty\n    };\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSaveContact = _this$props.onSaveContact,\n          onContactClose = _this$props.onContactClose,\n          open = _this$props.open,\n          contact = _this$props.contact;\n      var _this$state = this.state,\n          collect = _this$state.collect,\n          description = _this$state.description,\n          royalty = _this$state.royalty,\n          img = _this$state.img,\n          pdf = _this$state.pdf,\n          verified = _this$state.verified,\n          title = _this$state.title;\n      return __jsx(Modal, {\n        title: contact.description === '' ? __jsx(IntlMessages, {\n          id: \"contact.addContact\"\n        }) : __jsx(IntlMessages, {\n          id: \"contact.saveContact\"\n        }),\n        toggle: onContactClose,\n        visible: open,\n        closable: false,\n        onOk: function onOk() {\n          onContactClose();\n          onSaveContact({\n            collect: collect,\n            description: description,\n            royalty: royalty,\n            img: img,\n            pdf: pdf,\n            title: title,\n            verified: verified\n          });\n\n          _this2.setState({\n            'collect': '',\n            'description': '',\n            'img': '',\n            'royalty': 0,\n            'verified': false,\n            'pdf': '',\n            'title': ''\n          });\n        },\n        onCancel: onContactClose\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-row\"\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-form-item\"\n      }, img ? __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(\"img\", {\n        src: URL.createObjectURL(img),\n        className: \"photo\"\n      })) : null, __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        required: true,\n        placeholder: \"title\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            title: event.target.value\n          });\n        },\n        defaultValue: title,\n        margin: \"none\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Select, {\n        required: true,\n        defaultValue: \"popular\"\n      }, __jsx(Option, null, \"Marketplace\"), __jsx(Option, null, \"FineArt\"))), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        required: true,\n        placeholder: \"collection\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            collect: event.target.value\n          });\n        },\n        defaultValue: collect,\n        margin: \"none\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(TextArea, {\n        rows: 4,\n        placeholder: \"description\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        },\n        value: description,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"royalty\",\n        type: \"number\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            royalty: event.target.value\n          });\n        },\n        value: royalty,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(\"div\", null, \"Image\"), __jsx(Input, {\n        placeholder: \"img\",\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            img: event.target.files[0]\n          });\n        },\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(\"div\", null, \"Pdf\"), __jsx(Input, {\n        placeholder: \"pdf\",\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            pdf: event.target.files[0]\n          });\n        },\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Checkbox, {\n        placeholder: \"verified\",\n        type: \"checkbox\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            verified: event.target.checked\n          });\n        },\n        margin: \"normal\"\n      }, \"Verified\")))));\n    }\n  }]);\n\n  return AddContact;\n}(React.Component);\n\nexport default AddContact;","map":null,"metadata":{},"sourceType":"module"}