{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Input, Modal } from \"antd\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nvar AddContact = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddContact, _React$Component);\n\n  var _super = _createSuper(AddContact);\n\n  function AddContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    _this = _super.call(this, props);\n    var _props$contact = props.contact,\n        id = _props$contact.id,\n        thumb = _props$contact.thumb,\n        name = _props$contact.name,\n        email = _props$contact.email,\n        wallet = _props$contact.wallet,\n        designation = _props$contact.designation,\n        selected = _props$contact.selected,\n        starred = _props$contact.starred,\n        frequently = _props$contact.frequently;\n    _this.state = {\n      id: id,\n      thumb: thumb,\n      name: name,\n      email: email,\n      wallet: wallet,\n      designation: designation,\n      selected: selected,\n      starred: starred,\n      frequently: frequently\n    };\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSaveContact = _this$props.onSaveContact,\n          onContactClose = _this$props.onContactClose,\n          open = _this$props.open,\n          contact = _this$props.contact;\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          email = _this$state.email,\n          wallet = _this$state.wallet,\n          designation = _this$state.designation,\n          selected = _this$state.selected,\n          starred = _this$state.starred,\n          frequently = _this$state.frequently;\n      return __jsx(Modal, {\n        title: contact.name === '' ? __jsx(IntlMessages, {\n          id: \"contact.addContact\"\n        }) : __jsx(IntlMessages, {\n          id: \"contact.saveContact\"\n        }),\n        toggle: onContactClose,\n        visible: open,\n        closable: false,\n        onOk: function onOk() {\n          if (name === '') return;\n          onContactClose();\n          onSaveContact({\n            'id': id,\n            'name': name,\n            'email': email,\n            'phone': wallet,\n            'designation': designation,\n            'selected': selected,\n            'starred': starred,\n            'frequently': frequently\n          });\n\n          _this2.setState({\n            'id': id + 1,\n            'name': '',\n            'email': '',\n            'phone': '',\n            'designation': ''\n          });\n        },\n        onCancel: onContactClose\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-row\"\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-form-item\"\n      }, __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        required: true,\n        placeholder: \"Name\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        defaultValue: name,\n        margin: \"none\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"Email\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        value: email,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"Phone\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            phone: event.target.value\n          });\n        },\n        value: wallet,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"Designation\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            designation: event.target.value\n          });\n        },\n        value: designation,\n        autosize: {\n          minRows: 2,\n          maxRows: 6\n        },\n        margin: \"normal\"\n      })))));\n    }\n  }]);\n\n  return AddContact;\n}(React.Component);\n\nexport default AddContact;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/contact/AddContact/index.js"],"names":["React","Avatar","Input","Modal","IntlMessages","AddContact","props","contact","id","thumb","name","email","wallet","designation","selected","starred","frequently","state","onSaveContact","onContactClose","open","setState","event","target","value","phone","minRows","maxRows","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Input, Modal} from \"antd\";\r\n\r\nimport IntlMessages from \"../../../../util/IntlMessages\";\r\n\r\nclass AddContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {id, thumb, name, email, wallet, designation, selected, starred, frequently} = props.contact;\r\n    this.state = {\r\n      id,\r\n      thumb,\r\n      name,\r\n      email,\r\n      wallet,\r\n      designation,\r\n      selected,\r\n      starred,\r\n      frequently\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {onSaveContact, onContactClose, open, contact} = this.props;\r\n    const {id, name, email, wallet, designation, selected, starred, frequently} = this.state;\r\n    return (\r\n      <Modal\r\n        title={contact.name === '' ?\r\n          <IntlMessages id=\"contact.addContact\"/> :\r\n          <IntlMessages id=\"contact.saveContact\"/>}\r\n        toggle={onContactClose} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '')\r\n            return;\r\n          onContactClose();\r\n          onSaveContact(\r\n            {\r\n              'id': id,\r\n              'name': name,\r\n              'email': email,\r\n              'phone': wallet,\r\n              'designation': designation,\r\n              'selected': selected,\r\n              'starred': starred,\r\n              'frequently': frequently\r\n            });\r\n          this.setState({\r\n            'id': id + 1,\r\n            'name': '',\r\n            'email': '',\r\n            'phone': '',\r\n            'designation': '',\r\n          })\r\n\r\n        }}\r\n        onCancel={onContactClose}>\r\n\r\n        <div className=\"gx-modal-box-row\">\r\n\r\n          <div className=\"gx-modal-box-form-item\">\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                required\r\n                placeholder=\"Name\"\r\n                onChange={(event) => this.setState({name: event.target.value})}\r\n                defaultValue={name}\r\n                margin=\"none\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Email\"\r\n                onChange={(event) => this.setState({email: event.target.value})}\r\n                value={email}\r\n                margin=\"normal\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Phone\"\r\n                onChange={(event) => this.setState({phone: event.target.value})}\r\n                value={wallet}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Designation\"\r\n                onChange={(event) => this.setState({designation: event.target.value})}\r\n                value={designation}\r\n                autosize={{minRows: 2, maxRows: 6}}\r\n                margin=\"normal\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n"]},"metadata":{},"sourceType":"module"}