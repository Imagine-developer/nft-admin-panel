{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Avatar, Checkbox, Dropdown, Menu } from \"antd\";\nimport labels from \"../../../../../routes/mail/data/labels\";\nimport AddMail from './../../addMail';\nimport axios from 'axios';\nconst options = ['Delete'];\n\nconst MailListItem = ({\n  mail,\n  onMailSelect,\n  onMailChecked,\n  onStartSelect,\n  onDeleteMail\n}) => {\n  const {\n    0: contactState,\n    1: setContactState\n  } = useState(false);\n\n  async function onDeleteOneMail(data) {\n    const res = await axios.delete('http://localhost:8000/banner/' + data._id);\n    setContactState(true);\n  }\n\n  const menus = () => __jsx(Menu, {\n    onClick: e => {\n      if (e.key === 'Delete') {\n        onDeleteOneMail(mail);\n      } else {\n        this.onDeleteContact(this.props.contact);\n      }\n    }\n  }, options.map(option => __jsx(Menu.Item, {\n    key: option\n  }, option)));\n\n  return __jsx(\"div\", {\n    className: \"gx-module-list-item gx-mail-cell\"\n  }, __jsx(\"div\", {\n    className: \"gx-mail-list-info\"\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-content\",\n    onClick: () => {\n      onMailSelect(mail);\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-mail-user-des\"\n  }, __jsx(\"span\", {\n    className: \"gx-sender-name\"\n  }, mail.title), __jsx(\"span\", {\n    className: \"gx-toolbar-separator\"\n  }, \"\\xA0\"), mail.url ? __jsx(\"span\", {\n    className: \"gx-d-inline-block gx-text-truncate gx-send-subject\"\n  }, mail.url) : __jsx(\"span\", {\n    className: \"gx-d-inline-block gx-text-truncate gx-send-subject\"\n  })), __jsx(\"div\", {\n    className: \"gx-message\"\n  }, mail.text ? __jsx(\"p\", {\n    className: \"gx-text-truncate\"\n  }, \" \", mail.text) : __jsx(\"p\", {\n    className: \"gx-text-truncate\"\n  }, \" \", mail.description)), __jsx(\"div\", {\n    className: \"gx-time\"\n  }, mail.creationDate)), __jsx(Dropdown, {\n    overlay: menus(),\n    placement: \"bottomRight\",\n    trigger: ['click']\n  }, __jsx(\"i\", {\n    className: \"gx-icon-btn icon icon-ellipse-v\"\n  }))));\n};\n\nexport default MailListItem;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/MailList/MailListItem/index.js"],"names":["React","useState","Avatar","Checkbox","Dropdown","Menu","labels","AddMail","axios","options","MailListItem","mail","onMailSelect","onMailChecked","onStartSelect","onDeleteMail","contactState","setContactState","onDeleteOneMail","data","res","delete","_id","menus","e","key","onDeleteContact","props","contact","map","option","title","url","text","description","creationDate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,IAApC,QAA+C,MAA/C;AAEA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,OAAO,GAAG,CACd,QADc,CAAhB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,YAAP;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA,aAApC;AAAmDC,EAAAA;AAAnD,CAAD,KAAsE;AACzF,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkChB,QAAQ,CAAC,KAAD,CAAhD;;AACA,iBAAeiB,eAAf,CAA+BC,IAA/B,EAAoC;AAClC,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,MAAN,CAAa,kCAAkCF,IAAI,CAACG,GAApD,CAAlB;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AAED,QAAMM,KAAK,GAAG,MAAO,MAAC,IAAD;AAAM,IAAA,OAAO,EAAGC,CAAD,IAAO;AACzC,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtBP,QAAAA,eAAe,CAACP,IAAD,CAAf;AACD,OAFD,MAEO;AACL,aAAKe,eAAL,CAAqB,KAAKC,KAAL,CAAWC,OAAhC;AACD;AACF;AANoB,KAQlBnB,OAAO,CAACoB,GAAR,CAAYC,MAAM,IACjB,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEA;AAAhB,KACGA,MADH,CADD,CARkB,CAArB;;AAcA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,OAAO,EAAE,MAAM;AACrDlB,MAAAA,YAAY,CAACD,IAAD,CAAZ;AACD;AAFD,KAGE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAkCA,IAAI,CAACoB,KAAvC,CAFF,EAIE;AAAM,IAAA,SAAS,EAAC;AAAhB,YAJF,EAMGpB,IAAI,CAACqB,GAAL,GAAW;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAsErB,IAAI,CAACqB,GAA3E,CAAX,GAAmG;AAAM,IAAA,SAAS,EAAC;AAAhB,IANtG,CAHF,EAYE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGrB,IAAI,CAACsB,IAAL,GAAW;AAAG,IAAA,SAAS,EAAC;AAAb,UAAkCtB,IAAI,CAACsB,IAAvC,CAAX,GAA6D;AAAG,IAAA,SAAS,EAAC;AAAb,UAAkCtB,IAAI,CAACuB,WAAvC,CADhE,CAZF,EAeI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0BvB,IAAI,CAACwB,YAA/B,CAfJ,CAFF,EAqBE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEZ,KAAK,EAAxB;AAA4B,IAAA,SAAS,EAAC,aAAtC;AAAoD,IAAA,OAAO,EAAE,CAAC,OAAD;AAA7D,KACM;AAAG,IAAA,SAAS,EAAC;AAAb,IADN,CArBF,CAFF,CADF;AA+BD,CApDD;;AAsDA,eAAeb,YAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Avatar, Checkbox, Dropdown, Menu} from \"antd\";\r\n\r\nimport labels from \"../../../../../routes/mail/data/labels\";\r\nimport AddMail from './../../addMail'\r\nimport axios from 'axios'\r\n\r\n\r\nconst options = [\r\n  'Delete',\r\n];\r\nconst MailListItem = ({mail, onMailSelect, onMailChecked, onStartSelect, onDeleteMail}) => {\r\n  const [contactState, setContactState] = useState(false)\r\n  async function onDeleteOneMail(data){\r\n    const res = await axios.delete('http://localhost:8000/banner/' + data._id)\r\n    setContactState(true)\r\n  }\r\n\r\n  const menus = () => (<Menu onClick={(e) => {\r\n    if (e.key === 'Delete') {\r\n      onDeleteOneMail(mail)\r\n    } else {\r\n      this.onDeleteContact(this.props.contact)\r\n    }\r\n  }\r\n  }>\r\n    {options.map(option =>\r\n      <Menu.Item key={option}>\r\n        {option}\r\n      </Menu.Item>,\r\n    )}\r\n  </Menu>);\r\n  return (\r\n    <div className=\"gx-module-list-item gx-mail-cell\">\r\n\r\n      <div className=\"gx-mail-list-info\">\r\n\r\n        <div className=\"gx-module-list-content\" onClick={() => {\r\n          onMailSelect(mail);\r\n        }}>\r\n          <div className=\"gx-mail-user-des\">\r\n\r\n            <span className=\"gx-sender-name\">{mail.title}</span>\r\n\r\n            <span className=\"gx-toolbar-separator\">&nbsp;</span>\r\n\r\n            {mail.url ? <span className=\"gx-d-inline-block gx-text-truncate gx-send-subject\">{mail.url}</span>: <span className=\"gx-d-inline-block gx-text-truncate gx-send-subject\"></span>}\r\n        </div>\r\n\r\n          <div className=\"gx-message\">\r\n            {mail.text? <p className=\"gx-text-truncate\"> {mail.text}</p>: <p className=\"gx-text-truncate\"> {mail.description}</p>}\r\n          </div>\r\n            <div className=\"gx-time\">{mail.creationDate}</div>\r\n\r\n          \r\n        </div>\r\n        <Dropdown overlay={menus()} placement=\"bottomRight\" trigger={['click']}>\r\n              <i className=\"gx-icon-btn icon icon-ellipse-v\"/>\r\n        </Dropdown>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MailListItem;\r\n"]},"metadata":{},"sourceType":"module"}