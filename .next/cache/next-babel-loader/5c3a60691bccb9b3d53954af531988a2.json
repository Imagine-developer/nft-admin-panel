{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Input, Modal } from \"antd\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\nvar AddMail = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddMail, _React$Component);\n\n  var _super = _createSuper(AddMail);\n\n  function AddMail(props) {\n    var _this;\n\n    _classCallCheck(this, AddMail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      title: '',\n      subtitle: '',\n      text: '',\n      imgUrl: '',\n      url: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddMail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSaveContact = _this$props.onSaveContact,\n          onContactClose = _this$props.onContactClose,\n          open = _this$props.open,\n          currentMail = _this$props.currentMail;\n      var _this$state = this.state,\n          title = _this$state.title,\n          text = _this$state.text,\n          imgUrl = _this$state.imgUrl,\n          url = _this$state.url;\n      return __jsx(Modal, {\n        title: __jsx(IntlMessages, {\n          id: \"contact.addContact\"\n        }),\n        toggle: onContactClose,\n        visible: open,\n        closable: false,\n        onOk: function onOk() {\n          if (title === '') return;\n          onContactClose();\n          onSaveContact({\n            'title': title,\n            'text': text,\n            'url': url,\n            'imgUrl': imgUrl\n          });\n\n          _this2.setState({\n            title: '',\n            text: '',\n            imgUrl: '',\n            url: ''\n          });\n        },\n        onCancel: onContactClose\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-row\"\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-form-item\"\n      }, __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        required: true,\n        placeholder: \"title\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            title: event.target.value\n          });\n        },\n        defaultValue: title,\n        margin: \"none\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            text: event.target.value\n          });\n        },\n        value: text,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(TextArea, {\n        placeholder: \"url\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            url: event.target.value\n          });\n        },\n        value: url,\n        margin: \"normal\"\n      })), __jsx(\"div\", null, __jsx(Input, {\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            imgUrl: event.target.value\n          });\n        },\n        value: imgUrl\n      })))));\n    }\n  }]);\n\n  return AddMail;\n}(React.Component);\n\nexport default AddMail;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/addMail/index.js"],"names":["React","Avatar","Input","Modal","IntlMessages","TextArea","AddMail","props","state","title","subtitle","text","imgUrl","url","onSaveContact","onContactClose","open","currentMail","setState","event","target","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Avatar, Input, Modal} from \"antd\";\n\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\nclass AddMail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      subtitle: '',\n      text: '',\n      imgUrl: '',\n      url: ''\n    }\n  }\n  \n\n  render() {\n    const {onSaveContact, onContactClose, open, currentMail} = this.props;\n    const {title, text, imgUrl, url} = this.state;\n    return (\n      <Modal\n        title={\n          <IntlMessages id=\"contact.addContact\"/>}\n        toggle={onContactClose} visible={open}\n        closable={false}\n        onOk={() => {\n            if (title === '') return;\n          onContactClose();\n          onSaveContact({\n              'title': title,\n              'text': text,\n              'url': url,\n              'imgUrl': imgUrl\n          });\n          this.setState({\n              title: '',\n              text: '',\n              imgUrl: '',\n              url: ''\n          })\n\n        }}\n        onCancel={onContactClose}>\n\n        <div className=\"gx-modal-box-row\">\n\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n              <Input\n                required\n                placeholder=\"title\"\n                onChange={(event) => this.setState({title: event.target.value})}\n                defaultValue={title}\n                margin=\"none\"/>\n            </div>\n            <div className=\"gx-form-group\">\n              <Input\n                placeholder=\"text\"\n                onChange={(event) => this.setState({text: event.target.value})}\n                value={text}\n                margin=\"normal\"\n              />\n            </div>\n            <div className=\"gx-form-group\">\n              <TextArea\n                placeholder=\"url\"\n                onChange={(event) => this.setState({url: event.target.value})}\n                value={url}\n                margin=\"normal\"\n              />\n            </div>\n            <div>\n              <Input\n                type='file'\n                onChange={(event) => this.setState({imgUrl: event.target.value})}\n                value={imgUrl}\n              />\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddMail;\n"]},"metadata":{},"sourceType":"module"}