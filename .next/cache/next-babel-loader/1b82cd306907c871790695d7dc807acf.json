{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Avatar, Input, Modal } from \"antd\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nclass AddContact extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      id,\n      collect,\n      description,\n      img,\n      royalty,\n      title,\n      pdf\n    } = props.contact;\n    this.state = {\n      id,\n      title,\n      collect,\n      description,\n      verified: false,\n      img,\n      pdf,\n      royalty\n    };\n  }\n\n  render() {\n    const {\n      onSaveContact,\n      onContactClose,\n      open,\n      contact\n    } = this.props;\n    const {\n      collect,\n      description,\n      royalty,\n      img,\n      pdf,\n      verified,\n      title\n    } = this.state;\n    return __jsx(Modal, {\n      title: contact.description === '' ? __jsx(IntlMessages, {\n        id: \"contact.addContact\"\n      }) : __jsx(IntlMessages, {\n        id: \"contact.saveContact\"\n      }),\n      toggle: onContactClose,\n      visible: open,\n      closable: false,\n      onOk: () => {\n        if (name === '') return;\n        onContactClose();\n        onSaveContact({\n          collect,\n          description,\n          royalty,\n          img\n        });\n        this.setState({\n          'collect': '',\n          'description': '',\n          'img': '',\n          'royalty': 0\n        });\n      },\n      onCancel: onContactClose\n    }, __jsx(\"div\", {\n      className: \"gx-modal-box-row\"\n    }, __jsx(\"div\", {\n      className: \"gx-modal-box-form-item\"\n    }, __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(\"img\", {\n      src: img\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      required: true,\n      placeholder: \"title\",\n      onChange: event => this.setState({\n        title: event.target.value\n      }),\n      defaultValue: title,\n      margin: \"none\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      required: true,\n      placeholder: \"collection\",\n      onChange: event => this.setState({\n        collect: event.target.value\n      }),\n      defaultValue: collect,\n      margin: \"none\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      placeholder: \"description\",\n      onChange: event => this.setState({\n        description: event.target.value\n      }),\n      value: description,\n      margin: \"normal\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      placeholder: \"Wallet\",\n      type: \"number\",\n      onChange: event => this.setState({\n        royalty: event.target.value\n      }),\n      value: royalty,\n      margin: \"normal\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      placeholder: \"img\",\n      type: \"file\",\n      onChange: event => this.setState({\n        img: event.target.value\n      }),\n      margin: \"normal\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      placeholder: \"pdf\",\n      type: \"file\",\n      onChange: event => this.setState({\n        pdf: event.target.value\n      }),\n      margin: \"normal\"\n    })), __jsx(\"div\", {\n      className: \"gx-form-group\"\n    }, __jsx(Input, {\n      placeholder: \"verified\",\n      type: \"checkbox\",\n      onChange: event => this.setState({\n        verified: event.target.value\n      }),\n      margin: \"normal\"\n    })))));\n  }\n\n}\n\nexport default AddContact;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/contact/AddToken/index.js"],"names":["React","Avatar","Input","Modal","IntlMessages","AddContact","Component","constructor","props","id","collect","description","img","royalty","title","pdf","contact","state","verified","render","onSaveContact","onContactClose","open","name","setState","event","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Input, Modal} from \"antd\";\r\n\r\nimport IntlMessages from \"../../../../util/IntlMessages\";\r\n\r\nclass AddContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {id, collect, description, img, royalty, title, pdf} = props.contact;\r\n    this.state = {\r\n      id,\r\n      title,\r\n      collect,\r\n      description,\r\n      verified: false,\r\n      img,\r\n      pdf,\r\n      royalty,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {onSaveContact, onContactClose, open, contact} = this.props;\r\n    const {collect, description, royalty, img, pdf, verified, title} = this.state\r\n    \r\n    return (\r\n      <Modal\r\n        title={contact.description === '' ?\r\n          <IntlMessages id=\"contact.addContact\"/> :\r\n          <IntlMessages id=\"contact.saveContact\"/>}\r\n        toggle={onContactClose} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '')\r\n            return;\r\n          onContactClose();\r\n          onSaveContact(\r\n            {\r\n              collect, description, royalty, img\r\n            });\r\n          this.setState({\r\n            \r\n            'collect': '',\r\n            'description': '',\r\n            'img': '',\r\n            'royalty': 0,\r\n          })\r\n\r\n        }}\r\n        onCancel={onContactClose}>\r\n\r\n        <div className=\"gx-modal-box-row\">\r\n\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <div className=\"gx-form-group\">\r\n              <img src={img}/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                required\r\n                placeholder=\"title\"\r\n                onChange={(event) => this.setState({title: event.target.value})}\r\n                defaultValue={title}\r\n                margin=\"none\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                required\r\n                placeholder=\"collection\"\r\n                onChange={(event) => this.setState({collect: event.target.value})}\r\n                defaultValue={collect}\r\n                margin=\"none\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"description\"\r\n                onChange={(event) => this.setState({description: event.target.value})}\r\n                value={description}\r\n                margin=\"normal\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Wallet\"\r\n                type='number'\r\n                onChange={(event) => this.setState({royalty: event.target.value})}\r\n                value={royalty}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"img\"\r\n                type='file'\r\n                onChange={(event) => this.setState({img: event.target.value})}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"pdf\"\r\n                type='file'\r\n                onChange={(event) => this.setState({pdf: event.target.value})}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"verified\"\r\n                type='checkbox'\r\n                onChange={(event) => this.setState({verified: event.target.value})}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n"]},"metadata":{},"sourceType":"module"}