{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Avatar, Checkbox, Dropdown, Menu } from \"antd\";\nimport AddMail from '../../addMail';\nimport axios from 'axios';\nimport TokenList from \"..\";\nimport router from \"next/router\";\nvar options = ['Delete', 'Edit', 'Pdf'];\n\nvar TokenListItem = function TokenListItem(_ref) {\n  var mail = _ref.mail,\n      onMailSelect = _ref.onMailSelect,\n      onMailChecked = _ref.onMailChecked,\n      onStartSelect = _ref.onStartSelect,\n      onDeleteMail = _ref.onDeleteMail,\n      onSaveContact = _ref.onSaveContact;\n\n  var _useState = useState(false),\n      contactState = _useState[0],\n      setContactState = _useState[1];\n\n  function onDeleteOneMail(_x) {\n    return _onDeleteOneMail.apply(this, arguments);\n  }\n\n  function _onDeleteOneMail() {\n    _onDeleteOneMail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios[\"delete\"]('https://desolate-inlet-76011.herokuapp.com/banner/' + data._id);\n\n            case 2:\n              res = _context.sent;\n              setContactState(true);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onDeleteOneMail.apply(this, arguments);\n  }\n\n  var menus = function menus() {\n    return __jsx(Menu, {\n      onClick: function onClick(e) {\n        if (e.key === 'Edit') {\n          onSaveContact(mail);\n        } else if (e.key === 'Pdf') {\n          router.push(mail.pdf);\n        } else {\n          onDeleteOneMail(mail);\n        }\n      }\n    }, options.map(function (option) {\n      return __jsx(Menu.Item, {\n        key: option\n      }, option);\n    }));\n  };\n\n  console.log(mail);\n  return __jsx(\"div\", {\n    className: \"gx-module-list-item gx-mail-cell\"\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-icon\"\n  }, __jsx(\"div\", {\n    className: \"gx-ml-2 gx-d-none gx-d-sm-flex\"\n  }, __jsx(Avatar, {\n    size: \"large\",\n    src: mail.img\n  }))), __jsx(\"div\", {\n    className: \"gx-mail-list-info\"\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-content\",\n    onClick: function onClick() {\n      onMailSelect(mail);\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-mail-user-des\"\n  }, __jsx(\"span\", {\n    className: \"gx-sender-name\"\n  }, mail.collect)), __jsx(\"div\", {\n    className: \"gx-message\"\n  }, __jsx(\"p\", {\n    className: \"gx-text-truncate\"\n  }, \" \", mail.description)), __jsx(\"div\", {\n    className: \"gx-time\"\n  }, new Date(mail.creationDate).toString())), __jsx(Dropdown, {\n    overlay: menus(),\n    placement: \"bottomRight\",\n    trigger: ['click']\n  }, __jsx(\"i\", {\n    className: \"gx-icon-btn icon icon-ellipse-v\"\n  }))));\n};\n\nexport default TokenListItem;","map":null,"metadata":{},"sourceType":"module"}