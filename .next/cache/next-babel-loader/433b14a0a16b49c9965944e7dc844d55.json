{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Input, Modal } from \"antd\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nvar AddContact = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddContact, _React$Component);\n\n  var _super = _createSuper(AddContact);\n\n  function AddContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    _this = _super.call(this, props);\n    var _props$contact = props.contact,\n        id = _props$contact.id,\n        collect = _props$contact.collect,\n        description = _props$contact.description,\n        img = _props$contact.img,\n        royalty = _props$contact.royalty;\n    _this.state = {\n      id: id,\n      title: title,\n      collect: collect,\n      description: description,\n      img: img,\n      pdf: pdf,\n      royalty: royalty\n    };\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSaveContact = _this$props.onSaveContact,\n          onContactClose = _this$props.onContactClose,\n          open = _this$props.open,\n          contact = _this$props.contact;\n      var _this$state = this.state,\n          collect = _this$state.collect,\n          description = _this$state.description,\n          royalty = _this$state.royalty,\n          img = _this$state.img;\n      return __jsx(Modal, {\n        title: contact.description === '' ? __jsx(IntlMessages, {\n          id: \"contact.addContact\"\n        }) : __jsx(IntlMessages, {\n          id: \"contact.saveContact\"\n        }),\n        toggle: onContactClose,\n        visible: open,\n        closable: false,\n        onOk: function onOk() {\n          if (name === '') return;\n          onContactClose();\n          onSaveContact({\n            collect: collect,\n            description: description,\n            royalty: royalty,\n            img: img\n          });\n\n          _this2.setState({\n            'collect': '',\n            'description': '',\n            'img': '',\n            'royalty': 0\n          });\n        },\n        onCancel: onContactClose\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-row\"\n      }, __jsx(\"div\", {\n        className: \"gx-modal-box-form-item\"\n      }, __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(\"img\", {\n        src: img\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        required: true,\n        placeholder: \"title\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            collect: event.target.value\n          });\n        },\n        defaultValue: collect,\n        margin: \"none\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"description\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        },\n        value: description,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"Wallet\",\n        type: \"number\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            royalty: event.target.value\n          });\n        },\n        value: royalty,\n        margin: \"normal\"\n      })), __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(Input, {\n        placeholder: \"img\",\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            img: event.target.value\n          });\n        },\n        margin: \"normal\"\n      })))));\n    }\n  }]);\n\n  return AddContact;\n}(React.Component);\n\nexport default AddContact;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/contact/AddToken/index.js"],"names":["React","Avatar","Input","Modal","IntlMessages","AddContact","props","contact","id","collect","description","img","royalty","state","title","pdf","onSaveContact","onContactClose","open","name","setState","event","target","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Input, Modal} from \"antd\";\r\n\r\nimport IntlMessages from \"../../../../util/IntlMessages\";\r\n\r\nclass AddContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {id, collect, description, img, royalty} = props.contact;\r\n    this.state = {\r\n      id,\r\n      title,\r\n      collect,\r\n      description,\r\n      img,\r\n      pdf,\r\n      royalty,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {onSaveContact, onContactClose, open, contact} = this.props;\r\n    const {collect, description, royalty, img} = this.state\r\n    \r\n    return (\r\n      <Modal\r\n        title={contact.description === '' ?\r\n          <IntlMessages id=\"contact.addContact\"/> :\r\n          <IntlMessages id=\"contact.saveContact\"/>}\r\n        toggle={onContactClose} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '')\r\n            return;\r\n          onContactClose();\r\n          onSaveContact(\r\n            {\r\n              collect, description, royalty, img\r\n            });\r\n          this.setState({\r\n            \r\n            'collect': '',\r\n            'description': '',\r\n            'img': '',\r\n            'royalty': 0,\r\n          })\r\n\r\n        }}\r\n        onCancel={onContactClose}>\r\n\r\n        <div className=\"gx-modal-box-row\">\r\n\r\n          <div className=\"gx-modal-box-form-item\">\r\n          <div className=\"gx-form-group\">\r\n              <img src={img}/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                required\r\n                placeholder=\"title\"\r\n                onChange={(event) => this.setState({collect: event.target.value})}\r\n                defaultValue={collect}\r\n                margin=\"none\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"description\"\r\n                onChange={(event) => this.setState({description: event.target.value})}\r\n                value={description}\r\n                margin=\"normal\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Wallet\"\r\n                type='number'\r\n                onChange={(event) => this.setState({royalty: event.target.value})}\r\n                value={royalty}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"img\"\r\n                type='file'\r\n                onChange={(event) => this.setState({img: event.target.value})}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n"]},"metadata":{},"sourceType":"module"}