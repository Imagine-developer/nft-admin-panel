{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Avatar, Checkbox, Dropdown, Menu } from \"antd\";\nimport labels from \"../../../../../routes/mail/data/labels\";\nimport AddMail from './../../addMail';\nconst options = ['Delete'];\n\nconst MailListItem = ({\n  mail,\n  onMailSelect,\n  onMailChecked,\n  onStartSelect\n}) => {\n  const {\n    0: contactState,\n    1: setContactState\n  } = useState(false);\n\n  const menus = () => __jsx(Menu, {\n    onClick: e => {\n      if (e.key === 'Edit') {\n        this.onEditContact();\n      } else {\n        this.onDeleteContact(this.props.contact);\n      }\n    }\n  }, options.map(option => __jsx(Menu.Item, {\n    key: option\n  }, option)));\n\n  return __jsx(\"div\", {\n    className: \"gx-module-list-item gx-mail-cell\"\n  }, __jsx(\"div\", {\n    className: \"gx-mail-list-info\",\n    onClick: () => {\n      onMailSelect(mail);\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-content\"\n  }, __jsx(\"div\", {\n    className: \"gx-mail-user-des\"\n  }, __jsx(\"span\", {\n    className: \"gx-sender-name\"\n  }, mail.sender.name), __jsx(\"span\", {\n    className: \"gx-toolbar-separator\"\n  }, \"\\xA0\"), __jsx(\"span\", {\n    className: \"gx-d-inline-block gx-text-truncate gx-send-subject\"\n  }, mail.title), __jsx(\"div\", {\n    className: \"gx-time\"\n  }, mail.creation_date)), __jsx(\"div\", {\n    className: \"gx-message\"\n  }, __jsx(\"p\", {\n    className: \"gx-text-truncate\"\n  }, \" \", mail.description)), __jsx(Dropdown, {\n    overlay: menus(),\n    placement: \"Right\",\n    trigger: ['click']\n  }, __jsx(\"i\", {\n    className: \"gx-icon-btn icon icon-ellipse-v\"\n  })))));\n};\n\nexport default MailListItem;","map":{"version":3,"sources":["/Users/andreyplatonov/Downloads/Telegram Desktop/wieldy-v-2.4.3/next-js-jwt-stater-kit/app/components/mail/MailList/MailListItem/index.js"],"names":["React","useState","Avatar","Checkbox","Dropdown","Menu","labels","AddMail","options","MailListItem","mail","onMailSelect","onMailChecked","onStartSelect","contactState","setContactState","menus","e","key","onEditContact","onDeleteContact","props","contact","map","option","sender","name","title","creation_date","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,IAApC,QAA+C,MAA/C;AAEA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAGA,MAAMC,OAAO,GAAG,CACd,QADc,CAAhB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,YAAP;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA;AAApC,CAAD,KAAwD;AAC3E,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMe,KAAK,GAAG,MAAO,MAAC,IAAD;AAAM,IAAA,OAAO,EAAGC,CAAD,IAAO;AACzC,UAAIA,CAAC,CAACC,GAAF,KAAU,MAAd,EAAsB;AACpB,aAAKC,aAAL;AACD,OAFD,MAEO;AACL,aAAKC,eAAL,CAAqB,KAAKC,KAAL,CAAWC,OAAhC;AACD;AACF;AANoB,KAQlBd,OAAO,CAACe,GAAR,CAAYC,MAAM,IACjB,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEA;AAAhB,KACGA,MADH,CADD,CARkB,CAArB;;AAcA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,OAAO,EAAE,MAAM;AAChDb,MAAAA,YAAY,CAACD,IAAD,CAAZ;AACD;AAFD,KAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAkCA,IAAI,CAACe,MAAL,CAAYC,IAA9C,CAFF,EAIE;AAAM,IAAA,SAAS,EAAC;AAAhB,YAJF,EAME;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAsEhB,IAAI,CAACiB,KAA3E,CANF,EASE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0BjB,IAAI,CAACkB,aAA/B,CATF,CADF,EAeE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,UAAkClB,IAAI,CAACmB,WAAvC,CADF,CAfF,EAoBI,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEb,KAAK,EAAxB;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAA8C,IAAA,OAAO,EAAE,CAAC,OAAD;AAAvD,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,IADF,CApBJ,CAJF,CAFF,CADF;AAwCD,CAxDD;;AA0DA,eAAeP,YAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Avatar, Checkbox, Dropdown, Menu} from \"antd\";\r\n\r\nimport labels from \"../../../../../routes/mail/data/labels\";\r\nimport AddMail from './../../addMail'\r\n\r\n\r\nconst options = [\r\n  'Delete',\r\n];\r\nconst MailListItem = ({mail, onMailSelect, onMailChecked, onStartSelect}) => {\r\n  const [contactState, setContactState] = useState(false)\r\n  const menus = () => (<Menu onClick={(e) => {\r\n    if (e.key === 'Edit') {\r\n      this.onEditContact()\r\n    } else {\r\n      this.onDeleteContact(this.props.contact)\r\n    }\r\n  }\r\n  }>\r\n    {options.map(option =>\r\n      <Menu.Item key={option}>\r\n        {option}\r\n      </Menu.Item>,\r\n    )}\r\n  </Menu>);\r\n  return (\r\n    <div className=\"gx-module-list-item gx-mail-cell\">\r\n\r\n      <div className=\"gx-mail-list-info\" onClick={() => {\r\n        onMailSelect(mail);\r\n      }}>\r\n\r\n        <div className=\"gx-module-list-content\">\r\n          <div className=\"gx-mail-user-des\">\r\n\r\n            <span className=\"gx-sender-name\">{mail.sender.name}</span>\r\n\r\n            <span className=\"gx-toolbar-separator\">&nbsp;</span>\r\n\r\n            <span className=\"gx-d-inline-block gx-text-truncate gx-send-subject\">{mail.title}</span>\r\n\r\n          \r\n            <div className=\"gx-time\">{mail.creation_date}</div>\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"gx-message\">\r\n            <p className=\"gx-text-truncate\"> {mail.description}</p>\r\n\r\n          </div>\r\n\r\n            <Dropdown overlay={menus()} placement=\"Right\" trigger={['click']}>\r\n              <i className=\"gx-icon-btn icon icon-ellipse-v\"/>\r\n            </Dropdown>\r\n{/* \r\n            {contactState &&\r\n            <AddMail open={addContactState} contact={contact} onSaveContact={onSaveContact}\r\n                        onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>} */}\r\n            </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MailListItem;\r\n"]},"metadata":{},"sourceType":"module"}