{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from \"web3\";\n\nvar connectMetaMask = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var userAddress, web3;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context2.next = 17;\n              break;\n            }\n\n            _context2.next = 3;\n            return new Web3(window.ethereum);\n\n          case 3:\n            web3 = _context2.sent;\n            console.log(\"connect MetaMask\");\n            _context2.prev = 5;\n            _context2.next = 8;\n            return window.ethereum.enable().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      // User has allowed account access to DApp...\n                      console.log(\"step2\");\n\n                      if (web3) {\n                        if (window.ethereum.selectedAddress !== undefined) {\n                          userAddress = window.ethereum.selectedAddress;\n                        } else if (web3.givenProvider.MetamaskInpageProvider !== undefined) {\n                          userAddress = web3.givenProvider.MetamaskInpageProvider;\n                        } else if (web3.givenProvider.selectedAddress !== undefined) {\n                          userAddress = web3.givenProvider.selectedAddress;\n                        }\n                      }\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            })));\n\n          case 8:\n            console.log(\"userAddress: \", userAddress);\n            return _context2.abrupt(\"return\", {\n              userAddress: userAddress,\n              web3: web3\n            });\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](5);\n            // User has denied account access to DApp...\n            console.log(_context2.t0);\n\n          case 15:\n            _context2.next = 28;\n            break;\n\n          case 17:\n            if (!window.web3) {\n              _context2.next = 27;\n              break;\n            }\n\n            _context2.next = 20;\n            return new Web3(web3.currentProvider);\n\n          case 20:\n            web3 = _context2.sent;\n            console.log(web3);\n            console.log(\"connect MetaMask\");\n\n            if (web3) {\n              if (window.ethereum.selectedAddress !== undefined) {\n                userAddress = window.ethereum.selectedAddress;\n              } else if (web3.givenProvider.MetamaskInpageProvider !== undefined) {\n                userAddress = web3.givenProvider.MetamaskInpageProvider;\n              } else if (web3.givenProvider.selectedAddress !== undefined) {\n                userAddress = web3.givenProvider.selectedAddress;\n              }\n\n              console.log(\"userAddress: \", userAddress);\n            }\n\n            return _context2.abrupt(\"return\", {\n              userAddress: userAddress,\n              web3: web3\n            });\n\n          case 27:\n            console.log(\"You have to install MetaMask !\");\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[5, 12]]);\n  }));\n\n  return function connectMetaMask() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default connectMetaMask;","map":null,"metadata":{},"sourceType":"module"}